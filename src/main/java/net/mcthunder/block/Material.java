package net.mcthunder.block;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public enum Material {//http://minecraft.gamepedia.com/Id
    AIR("AIR", 0),
    STONE("STONE", 1),
    GRANITE("GRANITE", STONE, (short) 1),
    POLISHED_GRANITE("POLISHED_GRANITE", STONE, (short) 2),
    DIORITE("DIORITE", STONE, (short) 3),
    POLISHED_DIORITE("POLISHED_DIORITE", STONE, (short) 4),
    ANDESITE("ANDESITE", STONE, (short) 5),
    POLISHED_ANDESITE("POLISHED_ANDESITE", STONE, (short) 6),
    GRASS("GRASS", 2, Arrays.asList("GRASS_BLOCK")),
    DIRT("DIRT", 3),
    COARSE_DIRT("COURSE_DIRT", DIRT, (short) 1),
    PODZOL("PODZOL", DIRT, (short) 2),
    COBBLESTONE("COBBLESTONE", 4, Arrays.asList("COBBLE")),
    PLANKS("PLANKS", 5),
    OAK_PLANKS("OAK_PLANKS", PLANKS, (short) 0),
    SPRUCE_PLANKS("SPRUCE_PLANKS", PLANKS, (short) 1),
    BIRCH_PLANKS("BIRCH_PLANKS", PLANKS, (short) 2),
    JUNGLE_PLANKS("JUNGLE_PLANKS", PLANKS, (short) 3),
    ACACIA_PLANKS("ACACIA_PLANKS", PLANKS, (short) 4),
    DARK_OAK_PLANKS("DARK_OAK_PLANKS", PLANKS, (short) 5),
    SAPLING("SAPLING", 6),
    OAK_SAPLING("OAK_SAPLING", SAPLING, (short) 0),
    SPRUCE_SAPLING("SPRUCE_SAPLING", SAPLING, (short) 1),
    BIRCH_SAPLING("BIRCH_SAPLING", SAPLING, (short) 2),
    JUNGLE_SAPLING("JUNGLE_SAPLING", SAPLING, (short) 3),
    ACACIA_SAPLING("ACACIA_SAPLING", SAPLING, (short) 4),
    DARK_OAK_SAPLING("DARK_OAK_SAPLING", SAPLING, (short) 5),
    BEDROCK("BEDROCK", 7, Arrays.asList("ADMINIUM")),
    FLOWING_WATER("FLOWING_WATER", 8),
    WATER("WATER", 9, Arrays.asList("STILL_WATER")),
    WATER_8_8("WATER_8_8", WATER, (short) 0),
    WATER_7_8("WATER_7_8", WATER, (short) 1),
    WATER_6_8("WATER_6_8", WATER, (short) 2),
    WATER_5_8("WATER_5_8", WATER, (short) 3),
    WATER_4_8("WATER_4_8", WATER, (short) 4),
    WATER_3_8("WATER_3_8", WATER, (short) 5),
    WATER_2_8("WATER_2_8", WATER, (short) 6),
    WATER_1_8("WATER_1_8", WATER, (short) 7),
    FLOWING_LAVA("FLOWING_LAVA", 10),
    LAVA("LAVA", 11, Arrays.asList("STILL_LAVA")),
    LAVA_8_8("LAVA_8_8", LAVA, (short) 0),
    LAVA_7_8("LAVA_7_8", LAVA, (short) 1),
    LAVA_6_8("LAVA_6_8", LAVA, (short) 2),
    LAVA_5_8("LAVA_5_8", LAVA, (short) 3),
    LAVA_4_8("LAVA_4_8", LAVA, (short) 4),
    LAVA_3_8("LAVA_3_8", LAVA, (short) 5),
    LAVA_2_8("LAVA_2_8", LAVA, (short) 6),
    LAVA_1_8("LAVA_1_8", LAVA, (short) 7),
    SAND("SAND", 12),
    RED_SAND("RED_SAND", SAND, (short) 1),
    GRAVEL("GRAVEL", 13),
    GOLD_ORE("GOLD_ORE", 14),
    IRON_ORE("IRON_ORE", 15),
    COAL_ORE("COAL_ORE", 16),
    LOG("LOG", 17, Arrays.asList("BARK")),
    OAK_LOG_UP("OAK_LOG_UP", LOG, (short) 0),
    SPRUCE_LOG_UP("SPRUCE_LOG_UP", LOG, (short) 1),
    BIRCH_LOG_UP("BIRCH_LOG_UP", LOG, (short) 2),
    JUNGLE_LOG_UP("JUNGLE_LOG_UP", LOG, (short) 3),
    OAK_LOG_EAST("OAK_LOG_EAST", LOG, (short) 4),
    SPRUCE_LOG_EAST("SPRUCE_LOG_EAST", LOG, (short) 5),
    BIRCH_LOG_EAST("BIRCH_LOG_EAST", LOG, (short) 6),
    JUNGLE_LOG_EAST("JUNGLE_LOG_EAST", LOG, (short) 7),
    OAK_LOG_NORTH("OAK_LOG_NORTH", LOG, (short) 8),
    SPRUCE_LOG_NORTH("SPRUCE_LOG_NORTH", LOG, (short) 9),
    BIRCH_LOG_NORTH("BIRCH_LOG_NORTH", LOG, (short) 10),
    JUNGLE_LOG_NORTH("JUNGLE_LOG_NORTH", LOG, (short) 11),
    OAK_LOG_ALL_BARK("OAK_LOG_ALL_BARK", LOG, (short) 12),
    SPRUCE_LOG_ALL_BARK("SPRUCE_LOG_ALL_BARK", LOG, (short) 13),
    BIRCH_LOG_ALL_BARK("BIRCH_LOG_ALL_BARK", LOG, (short) 14),
    JUNGLE_LOG_ALL_BARK("JUNGLE_LOG_ALL_BARK", LOG, (short) 15),
    LEAVES("LEAVES", 18),
    OAK_LEAVES("OAK_LEAVES", LEAVES, (short) 0),
    SPRUCE_LEAVES("SPRUCE_LEAVES", LEAVES, (short) 1),
    BIRCH_LEAVES("BIRCH_LEAVES", LEAVES, (short) 2),
    JUNGLE_LEAVES("JUNGLE_LEAVES", LEAVES, (short) 3),
    OAK_LEAVES_NO_DECAY("OAK_LEAVES_NO_DECAY", LEAVES, (short) 4),
    SPRUCE_LEAVES_NO_DECAY("SPRUCE_LEAVES_NO_DECAY", LEAVES, (short) 5),
    BIRCH_LEAVES_NO_DECAY("BIRCH_LEAVES_NO_DECAY", LEAVES, (short) 6),
    JUNGLE_LEAVES_NO_DECAY("JUNGLE_LEAVES_NO_DECAY", LEAVES, (short) 7),
    OAK_LEAVES_DECAY("OAK_LEAVES_DECAY", LEAVES, (short) 8),
    SPRUCE_LEAVES_DECAY("SPRUCE_LEAVES_DECAY", LEAVES, (short) 9),
    BIRCH_LEAVES_DECAY("BIRCH_LEAVES_DECAY", LEAVES, (short) 10),
    JUNGLE_LEAVES_DECAY("JUNGLE_LEAVES_DECAY", LEAVES, (short) 11),
    SPONGE("SPONGE", 19),
    WET_SPONGE("WET_SPONGE", SPONGE, (short) 1),
    GLASS("GLASS", 20),
    LAPIS_ORE("LAPIS_ORE", 21, Arrays.asList("LAPIS_LAZULI_ORE")),
    LAPIS_BLOCK("LAPIS_BLOCK", 22, Arrays.asList("LAPIS_LAZULI_BLOCK")),
    DISPENSER("DISPENSER", 23),
    SANDSTONE("SANDSTONE", 24),
    CHISELED_SANDSTONE("CHISELED_SANDSTONE", SANDSTONE, (short) 1),
    SMOOTH_SANDSTONE("SMOOTH_SANDSTONE", SANDSTONE, (short) 2),
    NOTEBLOCK("NOTEBLOCK", 25),
    BED_BLOCK("BED_BLOCK", 26),//Unobtainable
    GOLDEN_RAIL("GOLDEN_RAIL", 27, Arrays.asList("POWERED_RAIL")),
    DETECTOR_RAIL("DETECTOR_RAIL", 28),
    STICKY_PISTON("STICKY_PISTON", 29),
    WEB("WEB", 30, Arrays.asList("COBWEB", "SPIDER_WEB")),
    TALLGRASS("TALLGRASS", 31),
    DEAD_BUSH("DEAD_BUSH", TALLGRASS, (short) 0),
    TALL_GRASS("TALL_GRASS", TALLGRASS, (short) 1),
    FERN("FERN", TALLGRASS, (short) 2),
    DEADBUSH("DEADBUSH", 32),
    PISTON("PISTON", 33),
    PISTON_HEAD("PISTON_HEAD", 34),//Unobtainable
    WOOL("WOOL", 35),
    WHITE_WOOL("WHITE_WOOL", WOOL, (short) 0, Arrays.asList("WHITE")),
    ORANGE_WOOL("ORANGE_WOOL", WOOL, (short) 1, Arrays.asList("ORANGE")),
    MAGENTA_WOOL("MAGENTA_WOOL", WOOL, (short) 2, Arrays.asList("MAGENTA")),
    LIGHT_BLUE_WOOL("LIGHT_BLUE_WOOL", WOOL, (short) 3, Arrays.asList("LIGHT_BLUE")),
    YELLOW_WOOL("YELLOW_WOOL", WOOL, (short) 4, Arrays.asList("YELLOW")),
    LIME_WOOL("LIME_WOOL", WOOL, (short) 5, Arrays.asList("LIME")),
    PINK_WOOL("PINK_WOOL", WOOL, (short) 6, Arrays.asList("PINK")),
    GRAY_WOOL("GRAY_WOOL", WOOL, (short) 7, Arrays.asList("GREY")),
    LIGHT_GRAY_WOOL("LIGHT_GRAY_WOOL", WOOL, (short) 8, Arrays.asList("LIGHT_GREY")),
    CYAN_WOOL("CYAN_WOOL", WOOL, (short) 9, Arrays.asList("CYAN")),
    PURPLE_WOOL("PURPLE_WOOL", WOOL, (short) 10, Arrays.asList("PURPLE")),
    BLUE_WOOL("BLUE_WOOL", WOOL, (short) 11, Arrays.asList("BLUE")),
    BROWN_WOOL("BROWN_WOOL", WOOL, (short) 12, Arrays.asList("BROWN")),
    GREEN_WOOL("GREEN_WOOL", WOOL, (short) 13, Arrays.asList("GREEN")),
    RED_WOOL("RED_WOOL", WOOL, (short) 14, Arrays.asList("RED")),
    BLACK_WOOL("BLACK_WOOL", WOOL, (short) 15, Arrays.asList("BLACK")),
    PISTON_EXTENSION("PISTON_EXTENSION", 36),//Unobtainable
    YELLOW_FLOWER("YELLOW_FLOWER", 37, Arrays.asList("DANDELION")),
    RED_FLOWER("RED_FLOWER", 38),
    POPPY("POPPY", RED_FLOWER, (short) 0),
    BLUE_ORCHID("BLUE_ORCHID", RED_FLOWER, (short) 1),
    ALLIUM("ALLIUM", RED_FLOWER, (short) 2),
    AZURE_BLUET("AZURE_BLUET", RED_FLOWER, (short) 3),
    RED_TULIP("RED_TULIP", RED_FLOWER, (short) 4),
    ORANGE_TULIP("ORANGE_TULIP", RED_FLOWER, (short) 5),
    WHITE_TULIP("WHITE_TULIP", RED_FLOWER, (short) 6),
    PINK_TULIP("PINK_TULIP", RED_FLOWER, (short) 7),
    OXEYE_DAISY("OXEYE_DAISY", RED_FLOWER, (short) 8),
    BROWN_MUSHROOM("BROWN_MUSHROOM", 39),
    RED_MUSHROOM("RED_MUSHROOM", 40),
    GOLD_BLOCK("GOLD_BLOCK", 41, Arrays.asList("BLOCK_OF_GOLD")),
    IRON_BLOCK("IRON_BLOCK", 42, Arrays.asList("BLOCK_OF_IRON")),
    DOUBLE_STONE_SLAB("DOUBLE_STONE_SLAB", 43),//Unobtainable
    DOUBLE_SANDSTONE_SLAB("DOUBLE_SANDSTONE_SLAB", DOUBLE_STONE_SLAB, (short) 1),
    DOUBLE_STONE_WOODEN_SLAB("DOUBLE_STONE_WOODEN_SLAB", DOUBLE_STONE_SLAB, (short) 2),
    DOUBLE_COBBLESTONE_SLAB("DOUBLE_COBBLESTONE_SLAB", DOUBLE_STONE_SLAB, (short) 3),
    DOUBLE_BRICKS_SLAB("DOUBLE_BRICKS_SLAB", DOUBLE_STONE_SLAB, (short) 4),
    DOUBLE_STONE_BRICK_SLAB("DOUBLE_STONE_BRICK_SLAB", DOUBLE_STONE_SLAB, (short) 5),
    DOUBLE_NETHER_BRICK_SLAB("DOUBLE_NETHER_BRICK_SLAB", DOUBLE_STONE_SLAB, (short) 6),
    DOUBLE_QUARTZ_SLAB("DOUBLE_QUARTZ_SLAB", DOUBLE_STONE_SLAB, (short) 7),
    FULL_STONE_SLAB("FULL_STONE_SLAB", DOUBLE_STONE_SLAB, (short) 8),
    FULL_SANDSTONE_SLAB("FULL_SANDSTONE_SLAB", DOUBLE_STONE_SLAB, (short) 9),
    TILE_QUARTZ_SLAB("TILE_QUARTZ_SLAB", DOUBLE_STONE_SLAB, (short) 10),
    STONE_SLAB("STONE_SLAB", 44, Arrays.asList("SLAB")),
    SANDSTONE_SLAB("SANDSTONE_SLAB", STONE_SLAB, (short) 1),
    STONE_WOODEN_SLAB("STONE_WOODEN_SLAB", STONE_SLAB, (short) 2),
    COBBLESTONE_SLAB("COBBLESTONE_SLAB", STONE_SLAB, (short) 3),
    BRICKS_SLAB("BRICKS_SLAB", STONE_SLAB, (short) 4),
    STONE_BRICK_SLAB("STONE_BRICK_SLAB", STONE_SLAB, (short) 5),
    NETHER_BRICK_SLAB("NETHER_BRICK_SLAB", STONE_SLAB, (short) 6),
    QUARTZ_SLAB("QUARTZ_SLAB", STONE_SLAB, (short) 7),
    UPPER_STONE_SLAB("UPPER_STONE_SLAB", STONE_SLAB, (short) 8),
    UPPER_SANDSTONE_SLAB("UPPER_SANDSTONE_SLAB", STONE_SLAB, (short) 9),
    UPPER_STONE_WOODEN_SLAB("UPPER_STONE_WOODEN_SLAB", STONE_SLAB, (short) 10),
    UPPER_COBBLESTONE_SLAB("UPPER_COBBLESTONE_SLAB", STONE_SLAB, (short) 11),
    UPPER_BRICKS_SLAB("UPPER_BRICKS_SLAB", STONE_SLAB, (short) 12),
    UPPER_STONE_BRICK_SLAB("UPPER_STONE_BRICK_SLAB", STONE_SLAB, (short) 13),
    UPPER_NETHER_BRICK_SLAB("UPPER_NETHER_BRICK_SLAB", STONE_SLAB, (short) 14),
    UPPER_QUARTZ_SLAB("UPPER_QUARTZ_SLAB", STONE_SLAB, (short) 15),
    BRICK_BLOCK("BRICK_BLOCK", 45),
    TNT("TNT", 46),
    BOOKSHELF("BOOKSHELF", 47),
    MOSSY_COBBLESTONE("MOSSY_COBBLESTONE", 48, Arrays.asList("MOSSY_COBBLE")),
    OBSIDIAN("OBSIDIAN", 49, Arrays.asList("OBBY")),
    TORCH("TORCH", 50),
    EAST_TORCH("EAST_TORCH", TORCH, (short) 1),
    WEST_TORCH("WEST_TORCH", TORCH, (short) 2),
    SOUTH_TORCH("SOUTH_TORCH", TORCH, (short) 3),
    NORTH_TORCH("NORTH_TORCH", TORCH, (short) 4),
    UP_TORCH("UP_TORCH", TORCH, (short) 5),
    FIRE("FIRE", 51),//Unobtainable
    MOB_SPAWNER("MOB_SPAWNER", 52, Arrays.asList("SPAWNER", "MONSTER_SPAWNER")),
    OAK_STAIRS("OAK_STAIRS", 53),
    CHEST("CHEST", 54),
    REDSTONE_WIRE("REDSTONE_WIRE", 55),//Unobtainable
    DIAMOND_ORE("DIAMOND_ORE", 56),
    DIAMOND_BLOCK("DIAMOND_BLOCK", 57, Arrays.asList("BLOCK_OF_DIAMOND")),
    CRAFTING_TABLE("CRAFTING_TABLE", 58, Arrays.asList("WORKBENCH")),
    WHEAT_BLOCK("WHEAT_BLOCK", 59, Arrays.asList("CROPS")),//Unobtainable
    WHEAT_BLOCK_1_8("WHEAT_BLOCK_1_8", WHEAT_BLOCK, (short) 0),
    WHEAT_BLOCK_2_8("WHEAT_BLOCK_2_8", WHEAT_BLOCK, (short) 1),
    WHEAT_BLOCK_3_8("WHEAT_BLOCK_3_8", WHEAT_BLOCK, (short) 2),
    WHEAT_BLOCK_4_8("WHEAT_BLOCK_4_8", WHEAT_BLOCK, (short) 3),
    WHEAT_BLOCK_5_8("WHEAT_BLOCK_5_8", WHEAT_BLOCK, (short) 4),
    WHEAT_BLOCK_6_8("WHEAT_BLOCK_6_8", WHEAT_BLOCK, (short) 5),
    WHEAT_BLOCK_7_8("WHEAT_BLOCK_7_8", WHEAT_BLOCK, (short) 6),
    WHEAT_BLOCK_FULL("WHEAT_BLOCK_FULL", WHEAT_BLOCK, (short) 7),
    FARMLAND("FARMLAND", 60, Arrays.asList("SOIL", "TILLED_SOIL", "TILLED_GROUND", "TILLED_LAND")),
    WET_FARMLAND("WET_FARMLAND", FARMLAND, (short) 1),
    FURNACE("FURNACE", 61),
    LIT_FURNACE("LIT_FURNACE", 62, Arrays.asList("BURNING_FURNACE")),
    STANDING_SIGN("STANDING_SIGN", 63),//Unobtainable
    WOODEN_DOOR_BLOCK("WOODEN_DOOR_BLOCK", 64),//Unobtainable
    LADDER("LADDER", 65),
    RAIL("RAIL", 66),
    STONE_STAIRS("STONE_STAIRS", 67),
    WALL_SIGN("WALL_SIGN", 68),//Unobtainable
    LEVER("LEVER", 69),
    STONE_PRESSURE_PLATE("STONE_PRESSURE_PLATE", 70),
    IRON_DOOR_BLOCK("IRON_DOOR_BLOCK", 71),//Unobtainable
    WOODEN_PRESSURE_PLATE("WOODEN_PRESSURE_PLATE", 72),
    REDSTONE_ORE("REDSTONE_ORE", 73),
    LIT_REDSTONE_ORE("LIT_REDSTONE_ORE", 74),//Unobtainable
    UNLIT_REDSTONE_TORCH("UNLIT_REDSTONE_TORCH", 75),//Unobtainable
    EAST_UNLIT_REDSTONE_TORCH("EAST_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 1),
    WEST_UNLIT_REDSTONE_TORCH("WEST_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 2),
    SOUTH_UNLIT_REDSTONE_TORCH("SOUTH_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 3),
    NORTH_UNLIT_REDSTONE_TORCH("NORTH_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 4),
    UP_UNLIT_REDSTONE_TORCH("UP_UNLIT_REDSTONE_TORCH", UNLIT_REDSTONE_TORCH, (short) 5),
    REDSTONE_TORCH("REDSTONE_TORCH", 76, Arrays.asList("LIT_REDSTONE_TORCH")),
    EAST_REDSTONE_TORCH("EAST_REDSTONE_TORCH", REDSTONE_TORCH, (short) 1),
    WEST_REDSTONE_TORCH("WEST_REDSTONE_TORCH", REDSTONE_TORCH, (short) 2),
    SOUTH_REDSTONE_TORCH("SOUTH_REDSTONE_TORCH", REDSTONE_TORCH, (short) 3),
    NORTH_REDSTONE_TORCH("NORTH_REDSTONE_TORCH", REDSTONE_TORCH, (short) 4),
    UP_REDSTONE_TORCH("UP_REDSTONE_TORCH", REDSTONE_TORCH, (short) 5),
    STONE_BUTTON("STONE_BUTTON", 77),
    SNOW_LAYER("SNOW_LAYER", 78),
    SNOW_LAYER_1_8("SNOW_LAYER_1_8", SNOW_LAYER, (short) 0),
    SNOW_LAYER_2_8("SNOW_LAYER_2_8", SNOW_LAYER, (short) 1),
    SNOW_LAYER_3_8("SNOW_LAYER_3_8", SNOW_LAYER, (short) 2),
    SNOW_LAYER_4_8("SNOW_LAYER_4_8", SNOW_LAYER, (short) 3),
    SNOW_LAYER_5_8("SNOW_LAYER_5_8", SNOW_LAYER, (short) 4),
    SNOW_LAYER_6_8("SNOW_LAYER_6_8", SNOW_LAYER, (short) 5),
    SNOW_LAYER_7_8("SNOW_LAYER_7_8", SNOW_LAYER, (short) 6),
    SNOW_LAYER_FULL("SNOW_LAYER_FULL", SNOW_LAYER, (short) 7),
    ICE("ICE", 79),
    SNOW("SNOW", 80, Arrays.asList("SNOW_BLOCK")),
    CACTUS("CACTUS", 81),
    CLAY("CLAY", 82, Arrays.asList("CLAY_BLOCK")),
    REEDS_BLOCK("REEDS_BLOCK", 83),//Unobtainable
    JUKEBOX("JUKEBOX", 84),
    JUKEBOX_WITH_DISK("JUKEBOX_WITH_DISK", JUKEBOX, (short) 1),
    FENCE("FENCE", 85),
    PUMPKIN("PUMPKIN", 86),
    NETHERRACK("NETHERRACK", 87),
    SOUL_SAND("SOUL_SAND", 88),
    GLOWSTONE("GLOWSTONE", 89),
    PORTAL("PORTAL", 90),//Unobtainable
    LIT_PUMPKIN("LIT_PUMPKIN", 91),
    CAKE_BLOCK("CAKE_BLOCK", 92),//Unobtainable
    CAKE_BLOCK_FULL("CAKE_BLOCK_FULL", CAKE_BLOCK, (short) 0),
    CAKE_BLOCK_5_6("CAKE_BLOCK_5_6", CAKE_BLOCK, (short) 1),
    CAKE_BLOCK_4_6("CAKE_BLOCK_4_6", CAKE_BLOCK, (short) 2),
    CAKE_BLOCK_3_6("CAKE_BLOCK_3_6", CAKE_BLOCK, (short) 3),
    CAKE_BLOCK_2_6("CAKE_BLOCK_2_6", CAKE_BLOCK, (short) 4),
    CAKE_BLOCK_1_6("CAKE_BLOCK_1_6", CAKE_BLOCK, (short) 5),
    UNPOWERED_REPEATER("UNPOWERED_REPEATER", 93),//Unobtainable
    POWERED_REPEATER("POWERED_REPEATER", 94),//Unobtainable
    STAINED_GLASS("STAINED_GLASS", 95),
    WHITE_STAINED_GLASS("WHITE_STAINED_GLASS", STAINED_GLASS, (short) 0, Arrays.asList("WHITE_GLASS")),
    ORANGE_STAINED_GLASS("ORANGE_STAINED_GLASS", STAINED_GLASS, (short) 1, Arrays.asList("ORANGE_GLASS")),
    MAGENTA_STAINED_GLASS("MAGENTA_STAINED_GLASS", STAINED_GLASS, (short) 2, Arrays.asList("MAGENTA_GLASS")),
    LIGHT_BLUE_STAINED_GLASS("LIGHT_BLUE_STAINED_GLASS", STAINED_GLASS, (short) 3, Arrays.asList("LIGHT_BLUE_GLASS")),
    YELLOW_STAINED_GLASS("YELLOW_STAINED_GLASS", STAINED_GLASS, (short) 4, Arrays.asList("YELLOW_GLASS")),
    LIME_STAINED_GLASS("LIME_STAINED_GLASS", STAINED_GLASS, (short) 5  ,Arrays.asList("LIME_GLASS")),
    PINK_STAINED_GLASS("PINK_STAINED_GLASS", STAINED_GLASS, (short) 6, Arrays.asList("PINK_GLASS")),
    GRAY_STAINED_GLASS("GRAY_STAINED_GLASS", STAINED_GLASS, (short) 7 ,Arrays.asList("GRAY_GLASS")),
    LIGHT_GRAY_STAINED_GLASS("LIGHT_GRAY_STAINED_GLASS", STAINED_GLASS, (short) 8 ,Arrays.asList("LIGHT_GRAY_GLASS")),
    CYAN_STAINED_GLASS("CYAN_STAINED_GLASS", STAINED_GLASS, (short) 9 ,Arrays.asList("CYAN_GLASS")),
    PURPLE_STAINED_GLASS("PURPLE_STAINED_GLASS", STAINED_GLASS, (short) 10 ,Arrays.asList("PURPLE_GLASS")),
    BLUE_STAINED_GLASS("BLUE_STAINED_GLASS", STAINED_GLASS, (short) 11 ,Arrays.asList("BLUE_GLASS")),
    BROWN_STAINED_GLASS("BROWN_STAINED_GLASS", STAINED_GLASS, (short) 12 ,Arrays.asList("BROWN_GLASS")),
    GREEN_STAINED_GLASS("GREEN_STAINED_GLASS", STAINED_GLASS, (short) 13,Arrays.asList("GREEN_GLASS")),
    RED_STAINED_GLASS("RED_STAINED_GLASS", STAINED_GLASS, (short) 14 ,Arrays.asList("RED_GLASS")),
    BLACK_STAINED_GLASS("BLACK_STAINED_GLASS", STAINED_GLASS, (short) 15 ,Arrays.asList("BLACK_GLASS")),
    TRAPDOOR("TRAPDOOR", 96),
    MONSTER_EGG("MONSTER_EGG", 97),
    STONE_MONSTER_EGG("STONE_MONSTER_EGG", MONSTER_EGG, (short) 0),
    COBBLESTONE_MONSTER_EGG("COBBLESTONE_MONSTER_EGG", MONSTER_EGG, (short) 1),
    STONE_BRICK_MONSTER_EGG("STONE_BRICK_MONSTER_EGG", MONSTER_EGG, (short) 2),
    MOSSY_STONE_BRICK_MONSTER_EGG("MOSSY_STONE_BRICK_MONSTER_EGG", MONSTER_EGG, (short) 3),
    CRACKED_STONE_BRICK_MONSTER_EGG("CRACKED_STONE_BRICK_MONSTER_EGG", MONSTER_EGG, (short) 4),
    CHISELED_STONE_BRICK_MONSTER_EGG("CHISELED_STONE_BRICK_MONSTER_EGG", MONSTER_EGG, (short) 5),
    STONEBRICK("STONEBRICK", 98, Arrays.asList("STONE_BRICK")),
    MOSSY_STONE_BRICK("MOSSY_STONE_BRICK", STONEBRICK, (short) 1),
    CRACKED_STONE_BRICK("CRACKED_STONE_BRICK", STONEBRICK, (short) 2),
    CHISELED_STONE_BRICK("CHISELED_STONE_BRICK", STONEBRICK, (short) 3),
    BROWN_MUSHROOM_BLOCK("BROWN_MUSHROOM_BLOCK", 99),
    BROWN_MUSHROOM_BLOCK_PORES("BROWN_MUSHROOM_BLOCK_PORES", BROWN_MUSHROOM_BLOCK, (short) 0),
    BROWN_MUSHROOM_BLOCK_CAP_UNW("BROWN_MUSHROOM_BLOCK_CAP_UNW", BROWN_MUSHROOM_BLOCK, (short) 1),
    BROWN_MUSHROOM_BLOCK_CAP_UN("BROWN_MUSHROOM_BLOCK_CAP_UN", BROWN_MUSHROOM_BLOCK, (short) 2),
    BROWN_MUSHROOM_BLOCK_CAP_UNE("BROWN_MUSHROOM_BLOCK_CAP_UNE", BROWN_MUSHROOM_BLOCK, (short) 3),
    BROWN_MUSHROOM_BLOCK_CAP_UW("BROWN_MUSHROOM_BLOCK_CAP_UW", BROWN_MUSHROOM_BLOCK, (short) 4),
    BROWN_MUSHROOM_BLOCK_CAP_U("BROWN_MUSHROOM_BLOCK_CAP_U", BROWN_MUSHROOM_BLOCK, (short) 5),
    BROWN_MUSHROOM_BLOCK_CAP_UE("BROWN_MUSHROOM_BLOCK_CAP_UE", BROWN_MUSHROOM_BLOCK, (short) 6),
    BROWN_MUSHROOM_BLOCK_CAP_USW("BROWN_MUSHROOM_BLOCK_CAP_USW", BROWN_MUSHROOM_BLOCK, (short) 7),
    BROWN_MUSHROOM_BLOCK_CAP_US("BROWN_MUSHROOM_BLOCK_CAP_US", BROWN_MUSHROOM_BLOCK, (short) 8),
    BROWN_MUSHROOM_BLOCK_CAP_USE("BROWN_MUSHROOM_BLOCK_CAP_USE", BROWN_MUSHROOM_BLOCK, (short) 9),
    BROWN_MUSHROOM_BLOCK_PORES_UD("BROWN_MUSHROOM_BLOCK_PORES_UD", BROWN_MUSHROOM_BLOCK, (short) 10),
    BROWN_MUSHROOM_BLOCK_CAP("BROWN_MUSHROOM_BLOCK_CAP", BROWN_MUSHROOM_BLOCK, (short) 14),
    BROWN_MUSHROOM_BLOCK_STEMS("BROWN_MUSHROOM_BLOCK_STEMS", BROWN_MUSHROOM_BLOCK, (short) 15),
    RED_MUSHROOM_BLOCK("RED_MUSHROOM_BLOCK", 100),
    RED_MUSHROOM_BLOCK_PORES("RED_MUSHROOM_BLOCK_PORES", RED_MUSHROOM_BLOCK, (short) 0),
    RED_MUSHROOM_BLOCK_CAP_UNW("RED_MUSHROOM_BLOCK_CAP_UNW", RED_MUSHROOM_BLOCK, (short) 1),
    RED_MUSHROOM_BLOCK_CAP_UN("RED_MUSHROOM_BLOCK_CAP_UN", RED_MUSHROOM_BLOCK, (short) 2),
    RED_MUSHROOM_BLOCK_CAP_UNE("RED_MUSHROOM_BLOCK_CAP_UNE", RED_MUSHROOM_BLOCK, (short) 3),
    RED_MUSHROOM_BLOCK_CAP_UW("RED_MUSHROOM_BLOCK_CAP_UW", RED_MUSHROOM_BLOCK, (short) 4),
    RED_MUSHROOM_BLOCK_CAP_U("RED_MUSHROOM_BLOCK_CAP_U", RED_MUSHROOM_BLOCK, (short) 5),
    RED_MUSHROOM_BLOCK_CAP_UE("RED_MUSHROOM_BLOCK_CAP_UE", RED_MUSHROOM_BLOCK, (short) 6),
    RED_MUSHROOM_BLOCK_CAP_USW("RED_MUSHROOM_BLOCK_CAP_USW", RED_MUSHROOM_BLOCK, (short) 7),
    RED_MUSHROOM_BLOCK_CAP_US("RED_MUSHROOM_BLOCK_CAP_US", RED_MUSHROOM_BLOCK, (short) 8),
    RED_MUSHROOM_BLOCK_CAP_USE("RED_MUSHROOM_BLOCK_CAP_USE", RED_MUSHROOM_BLOCK, (short) 9),
    RED_MUSHROOM_BLOCK_PORES_UD("RED_MUSHROOM_BLOCK_PORES_UD", RED_MUSHROOM_BLOCK, (short) 10),
    RED_MUSHROOM_BLOCK_CAP("RED_MUSHROOM_BLOCK_CAP", RED_MUSHROOM_BLOCK, (short) 14),
    RED_MUSHROOM_BLOCK_STEMS("RED_MUSHROOM_BLOCK_STEMS", RED_MUSHROOM_BLOCK, (short) 15),
    IRON_BARS("IRON_BARS", 101),
    GLASS_PANE("GLASS_PANE", 102),
    MELON_BLOCK("MELON_BLOCK", 103),
    PUMPKIN_STEM("PUMPKIN_STEM", 104, Arrays.asList("PUMPKIN_SEEDS_BLOCK")),//Unobtainable
    PUMPKIN_STEM_1_8("PUMPKIN_STEM_1_8", PUMPKIN_STEM, (short) 0),
    PUMPKIN_STEM_2_8("PUMPKIN_STEM_2_8", PUMPKIN_STEM, (short) 1),
    PUMPKIN_STEM_3_8("PUMPKIN_STEM_3_8", PUMPKIN_STEM, (short) 2),
    PUMPKIN_STEM_4_8("PUMPKIN_STEM_4_8", PUMPKIN_STEM, (short) 3),
    PUMPKIN_STEM_5_8("PUMPKIN_STEM_5_8", PUMPKIN_STEM, (short) 4),
    PUMPKIN_STEM_6_8("PUMPKIN_STEM_6_8", PUMPKIN_STEM, (short) 5),
    PUMPKIN_STEM_7_8("PUMPKIN_STEM_7_8", PUMPKIN_STEM, (short) 6),
    PUMPKIN_STEM_8_8("PUMPKIN_STEM_8_8", PUMPKIN_STEM, (short) 7),
    MELON_STEM("MELON_STEM", 105, Arrays.asList("MELON_SEEDS_BLOCK")),//Unobtainable
    MELON_STEM_1_8("MELON_STEM_1_8", MELON_STEM, (short) 0),
    MELON_STEM_2_8("MELON_STEM_2_8", MELON_STEM, (short) 1),
    MELON_STEM_3_8("MELON_STEM_3_8", MELON_STEM, (short) 2),
    MELON_STEM_4_8("MELON_STEM_4_8", MELON_STEM, (short) 3),
    MELON_STEM_5_8("MELON_STEM_5_8", MELON_STEM, (short) 4),
    MELON_STEM_6_8("MELON_STEM_6_8", MELON_STEM, (short) 5),
    MELON_STEM_7_8("MELON_STEM_7_8", MELON_STEM, (short) 6),
    MELON_STEM_8_8("MELON_STEM_8_8", MELON_STEM, (short) 7),
    VINE("VINE", 106),
    FENCE_GATE("FENCE_GATE", 107),
    BRICK_STAIRS("BRICK_STAIRS", 108),
    STONE_BRICK_STAIRS("STONE_BRICK_STAIRS", 109),
    MYCELIUM("MYCELIUM", 110),
    WATERLILY("WATERLILY", 111),
    NETHER_BRICK("NETHER_BRICK", 112),
    NETHER_BRICK_FENCE("NETHER_BRICK_FENCE", 113),
    NETHER_BRICK_STAIRS("NETHER_BRICK_STAIRS", 114),
    NETHER_WART_STALK("NETHER_WART_STALK", 115),//Unobtainable
    NETHER_WART_STALK_1_4("NETHER_WART_STALK_1_4", NETHER_WART_STALK, (short) 0),
    NETHER_WART_STALK_2_4("NETHER_WART_STALK_2_4", NETHER_WART_STALK, (short) 1),
    NETHER_WART_STALK_3_4("NETHER_WART_STALK_3_4", NETHER_WART_STALK, (short) 2),
    NETHER_WART_STALK_4_4("NETHER_WART_STALK_4_4", NETHER_WART_STALK, (short) 3),
    ENCHANTING_TABLE("ENCHANTING_TABLE", 116),
    BREWING_STAND_BLOCK("BREWING_STAND_BLOCK", 117),//Unobtainable
    CAULDRON_BLOCK("CAULDRON_BLOCK", 118),//Unobtainable
    CAULDRON_BLOCK_EMPTY("CAULDRON_BLOCK_EMPTY", CAULDRON_BLOCK, (short) 0),
    CAULDRON_BLOCK_1_3("CAULDRON_BLOCK_1_3", CAULDRON_BLOCK, (short) 1),
    CAULDRON_BLOCK_2_3("CAULDRON_BLOCK_2_3", CAULDRON_BLOCK, (short) 2),
    CAULDRON_BLOCK_3_3("CAULDRON_BLOCK_3_3", CAULDRON_BLOCK, (short) 3),
    END_PORTAL("END_PORTAL", 119),//Unobtainable
    END_PORTAL_FRAME("END_PORTAL_FRAME", 120),
    END_PORTAL_FRAME_EMPTY("END_PORTAL_FRAME_EMPTY", END_PORTAL_FRAME, (short) 0),
    END_PORTAL_FRAME_FULL("END_PORTAL_FRAME_FULL", END_PORTAL_FRAME, (short) 1),
    END_STONE("END_STONE", 121),
    DRAGON_EGG("DRAGON_EGG", 122),
    REDSTONE_LAMP("REDSTONE_LAMP", 123 ,Arrays.asList("LAMP")),
    LIT_REDSTONE_LAMP("LIT_REDSTONE_LAMP", 124),//Unobtainable
    DOUBLE_WOODEN_SLAB("DOUBLE_WOODEN_SLAB", 125),//Unobtainable
    DOUBLE_OAK_SLAB("DOUBLE_OAK_SLAB", DOUBLE_WOODEN_SLAB, (short) 0, Arrays.asList("DOUBLE_OAK_WOOD_SLAB")),
    DOUBLE_SPRUCE_SLAB("DOUBLE_SPRUCE_SLAB", DOUBLE_WOODEN_SLAB, (short) 1, Arrays.asList("DOUBLE_SPRUCE_WOOD_SLAB")),
    DOUBLE_BIRCH_SLAB("DOUBLE_BIRCH_SLAB", DOUBLE_WOODEN_SLAB, (short) 2, Arrays.asList("DOUBLE_BIRCH_WOOD_SLAB")),
    DOUBLE_JUNGLE_SLAB("DOUBLE_JUNGLE_SLAB", DOUBLE_WOODEN_SLAB, (short) 3, Arrays.asList("DOUBLE_JUNGLE_WOOD_SLAB")),
    DOUBLE_ACACIA_SLAB("DOUBLE_ACACIA_SLAB", DOUBLE_WOODEN_SLAB, (short) 4, Arrays.asList("DOUBLE_ACACIA_WOOD_SLAB")),
    DOUBLE_DARK_OAK_SLAB("DOUBLE_DARK_OAK_SLAB", DOUBLE_WOODEN_SLAB, (short) 5, Arrays.asList("DOUBLE_DARK_OAK_WOOD_SLAB")),
    WOODEN_SLAB("WOODEN_SLAB", 126),
    OAK_SLAB("OAK_SLAB", WOODEN_SLAB, (short) 0, Arrays.asList("OAK_WOOD_SLAB")),
    SPRUCE_SLAB("SPRUCE_SLAB", WOODEN_SLAB, (short) 1, Arrays.asList("SPRUCE_WOOD_SLAB")),
    BIRCH_SLAB("BIRCH_SLAB", WOODEN_SLAB, (short) 2, Arrays.asList("BIRCH_WOOD_SLAB")),
    JUNGLE_SLAB("JUNGLE_SLAB", WOODEN_SLAB, (short) 3, Arrays.asList("JUNGLE_WOOD_SLAB")),
    ACACIA_SLAB("ACACIA_SLAB", WOODEN_SLAB, (short) 4, Arrays.asList("ACACIA_WOOD_SLAB")),
    DARK_OAK_SLAB("DARK_OAK_SLAB", WOODEN_SLAB, (short) 5, Arrays.asList("DARK_OAK_WOOD_SLAB")),
    UPPER_OAK_SLAB("UPPER_OAK_SLAB", WOODEN_SLAB, (short) 8, Arrays.asList("UPPER_OAK_WOOD_SLAB")),
    UPPER_SPRUCE_SLAB("UPPER_SPRUCE_SLAB", WOODEN_SLAB, (short) 9, Arrays.asList("UPPER_SPRUCE_WOOD_SLAB")),
    UPPER_BIRCH_SLAB("UPPER_BIRCH_SLAB", WOODEN_SLAB, (short) 10, Arrays.asList("UPPER_BIRCH_WOOD_SLAB")),
    UPPER_JUNGLE_SLAB("UPPER_JUNGLE_SLAB", WOODEN_SLAB, (short) 11, Arrays.asList("UPPER_JUNGLE_WOOD_SLAB")),
    UPPER_ACACIA_SLAB("UPPER_ACACIA_SLAB", WOODEN_SLAB, (short) 12, Arrays.asList("UPPER_ACACIA_WOOD_SLAB")),
    UPPER_DARK_OAK_SLAB("UPPER_DARK_OAK_SLAB", WOODEN_SLAB, (short) 13, Arrays.asList("UPPER_DARK_OAK_WOOD_SLAB")),
    COCOA_BLOCK("COCOA_BLOCK", 127),//Unobtainable
    COCOA_BLOCK_SOUTH_1_3("COCOA_BLOCK_SOUTH_1_3", COCOA_BLOCK, (short) 0),
    COCOA_BLOCK_WEST_1_3("COCOA_BLOCK_WEST_1_3", COCOA_BLOCK, (short) 1),
    COCOA_BLOCK_NORTH_1_3("COCOA_BLOCK_NORTH_1_3", COCOA_BLOCK, (short) 2),
    COCOA_BLOCK_EAST_1_3("COCOA_BLOCK_EAST_1_3", COCOA_BLOCK, (short) 3),
    COCOA_BLOCK_SOUTH_2_3("COCOA_BLOCK_SOUTH_2_3", COCOA_BLOCK, (short) 4),
    COCOA_BLOCK_WEST_2_3("COCOA_BLOCK_WEST_2_3", COCOA_BLOCK, (short) 5),
    COCOA_BLOCK_NORTH_2_3("COCOA_BLOCK_NORTH_2_3", COCOA_BLOCK, (short) 6),
    COCOA_BLOCK_EAST_2_3("COCOA_BLOCK_EAST_2_3", COCOA_BLOCK, (short) 7),
    COCOA_BLOCK_SOUTH_3_3("COCOA_BLOCK_SOUTH_3_3", COCOA_BLOCK, (short) 8),
    COCOA_BLOCK_WEST_3_3("COCOA_BLOCK_WEST_3_3", COCOA_BLOCK, (short) 9),
    COCOA_BLOCK_NORTH_3_3("COCOA_BLOCK_NORTH_3_3", COCOA_BLOCK, (short) 10),
    COCOA_BLOCK_EAST_3_3("COCOA_BLOCK_EAST_3_3", COCOA_BLOCK, (short) 11),
    SANDSTONE_STAIRS("SANDSTONE_STAIRS", 128),
    EMERALD_ORE("EMERALD_ORE", 129),
    ENDER_CHEST("ENDER_CHEST", 130),
    TRIPWIRE_HOOK("TRIPWIRE_HOOK", 131),
    TRIPWIRE("TRIPWIRE", 132),//Unobtainable
    EMERALD_BLOCK("EMERALD_BLOCK", 133),
    SPRUCE_STAIRS("SPRUCE_STAIRS", 134),
    BIRCH_STAIRS("BIRCH_STAIRS", 135),
    JUNGLE_STAIRS("JUNGLE_STAIRS", 136),
    COMMAND_BLOCK("COMMAND_BLOCK", 137),
    BEACON("BEACON", 138),
    COBBLESTONE_WALL("COBBLESTONE_WALL", 139),
    MOSSY_COBBLESTONE_WALL("MOSSY_COBBLESTONE_WALL", COBBLESTONE_WALL, (short) 1),
    FLOWER_POT_BLOCK("FLOWER_POT_BLOCK", 140),
    CARROT_BLOCK("CARROT_BLOCK", 141),
    CARROT_BLOCK_1_8("CARROT_BLOCK_1_8", CARROT_BLOCK, (short) 0),
    CARROT_BLOCK_2_8("CARROT_BLOCK_2_8", CARROT_BLOCK, (short) 1),
    CARROT_BLOCK_3_8("CARROT_BLOCK_3_8", CARROT_BLOCK, (short) 2),
    CARROT_BLOCK_4_8("CARROT_BLOCK_4_8", CARROT_BLOCK, (short) 3),
    CARROT_BLOCK_5_8("CARROT_BLOCK_5_8", CARROT_BLOCK, (short) 4),
    CARROT_BLOCK_6_8("CARROT_BLOCK_6_8", CARROT_BLOCK, (short) 5),
    CARROT_BLOCK_7_8("CARROT_BLOCK_7_8", CARROT_BLOCK, (short) 6),
    CARROT_BLOCK_8_8("CARROT_BLOCK_8_8", CARROT_BLOCK, (short) 7),
    POTATO_BLOCK("POTATO_BLOCK", 142),
    POTATO_BLOCK_1_8("POTATO_BLOCK_1_8", POTATO_BLOCK, (short) 0),
    POTATO_BLOCK_2_8("POTATO_BLOCK_2_8", POTATO_BLOCK, (short) 1),
    POTATO_BLOCK_3_8("POTATO_BLOCK_3_8", POTATO_BLOCK, (short) 2),
    POTATO_BLOCK_4_8("POTATO_BLOCK_4_8", POTATO_BLOCK, (short) 3),
    POTATO_BLOCK_5_8("POTATO_BLOCK_5_8", POTATO_BLOCK, (short) 4),
    POTATO_BLOCK_6_8("POTATO_BLOCK_6_8", POTATO_BLOCK, (short) 5),
    POTATO_BLOCK_7_8("POTATO_BLOCK_7_8", POTATO_BLOCK, (short) 6),
    POTATO_BLOCK_8_8("POTATO_BLOCK_8_8", POTATO_BLOCK, (short) 7),
    WOODEN_BUTTON("WOODEN_BUTTON", 143),
    SKULL_BLOCK("SKULL_BLOCK", 144),//Unobtainable
    SKULL_BLOCK_FLOOR("SKULL_BLOCK_FLOOR", SKULL_BLOCK, (short) 1),
    SKULL_BLOCK_NORTH("SKULL_BLOCK_NORTH", SKULL_BLOCK, (short) 2),
    SKULL_BLOCK_SOUTH("SKULL_BLOCK_SOUTH", SKULL_BLOCK, (short) 3),
    SKULL_BLOCK_EAST("SKULL_BLOCK_EAST", SKULL_BLOCK, (short) 4),
    SKULL_BLOCK_WEST("SKULL_BLOCK_WEST", SKULL_BLOCK, (short) 5),
    ANVIL("ANVIL", 145),//TODO: Figure out how to do rotation
    SLIGHTLY_DAMAGED_ANVIL("SLIGHTLY_DAMAGED_ANVIL", ANVIL, (short) 1),
    VERY_DAMAGED_ANVIL("VERY_DAMAGED_ANVIL", ANVIL, (short) 2),
    TRAPPED_CHEST("TRAPPED_CHEST", 146),
    LIGHT_WEIGHTED_PRESSURE_PLATE("LIGHT_WEIGHTED_PRESSURE_PLATE", 147),
    HEAVY_WEIGHTED_PRESSURE_PLATE("HEAVY_WEIGHTED_PRESSURE_PLATE", 148),
    UNPOWERED_COMPARATOR("UNPOWERED_COMPARATOR", 149),//Unobtainable
    POWERED_COMPARATOR("POWERED_COMPARATOR", 150),//Unobtainable
    DAYLIGHT_DETECTOR("DAYLIGHT_DETECTOR", 151),
    REDSTONE_BLOCK("REDSTONE_BLOCK", 152, Arrays.asList("BLOCK","BLOCKUS","BLOCKUS89")),
    QUARTZ_ORE("QUARTZ_ORE", 153),
    HOPPER("HOPPER", 154),
    HOPPER_DOWN("HOPPER_DOWN", HOPPER, (short) 0),
    HOPPER_NORTH("HOPPER_NORTH", HOPPER, (short) 2),
    HOPPER_SOUTH("HOPPER_SOUTH", HOPPER, (short) 3),
    HOPPER_WEST("HOPPER_WEST", HOPPER, (short) 4),
    HOPPER_EAST("HOPPER_EAST", HOPPER, (short) 5),
    QUARTZ_BLOCK("QUARTZ_BLOCK", 155),
    BLOCK_OF_QUARTZ("BLOCK_OF_QUARTZ", QUARTZ_BLOCK, (short) 0),
    CHISELED_QUARTZ_BLOCK("CHISELED_QUARTZ_BLOCK", QUARTZ_BLOCK, (short) 1),
    PILLAR_QUARTZ_BLOCK_UP("PILLAR_QUARTZ_BLOCK_UP", QUARTZ_BLOCK, (short) 2),
    PILLAR_QUARTZ_BLOCK_NORTH("PILLAR_QUARTZ_BLOCK_NORTH", QUARTZ_BLOCK, (short) 3),
    PILLAR_QUARTZ_BLOCK_EAST("PILLAR_QUARTZ_BLOCK_EAST", QUARTZ_BLOCK, (short) 4),
    QUARTZ_STAIRS("QUARTZ_STAIRS", 156),
    ACTIVATOR_RAIL("ACTIVATOR_RAIL", 157),
    DROPPER("DROPPER", 158),
    STAINED_HARDENED_CLAY("STAINED_HARDENED_CLAY", 159),
    WHITE_STAINED_CLAY("WHITE_STAINED_GLASS", STAINED_HARDENED_CLAY, (short) 0,Arrays.asList("WHITE_CLAY")),
    ORANGE_STAINED_CLAY("ORANGE_STAINED_GLASS", STAINED_HARDENED_CLAY, (short) 1,Arrays.asList("ORANGE_CLAY")),
    MAGENTA_STAINED_CLAY("MAGENTA_STAINED_GLASS", STAINED_HARDENED_CLAY, (short) 2,Arrays.asList("MAGENTA_CLAY")),
    LIGHT_BLUE_STAINED_CLAY("LIGHT_BLUE_STAINED_GLASS", STAINED_HARDENED_CLAY, (short) 3,Arrays.asList("LIGHT_BLUE_CLAY")),
    YELLOW_STAINED_CLAY("YELLOW_STAINED_GLASS", STAINED_HARDENED_CLAY, (short) 4,Arrays.asList("YELLOW_CLAY")),
    LIME_STAINED_CLAY("LIME_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 5,Arrays.asList("LIME_CLAY")),
    PINK_STAINED_CLAY("PINK_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 6,Arrays.asList("PINK_CLAY")),
    GRAY_STAINED_CLAY("GRAY_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 7,Arrays.asList("GRAY_CLAY")),
    LIGHT_GRAY_STAINED_CLAY("LIGHT_GRAY_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 8,Arrays.asList("LIGHT_GRAY_CLAY")),
    CYAN_STAINED_CLAY("CYAN_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 9,Arrays.asList("CYAN_CLAY")),
    PURPLE_STAINED_CLAY("PURPLE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 10,Arrays.asList("PURPLE_CLAY")),
    BLUE_STAINED_CLAY("BLUE_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 11,Arrays.asList("BLUE_CLAY")),
    BROWN_STAINED_CLAY("BROWN_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 12,Arrays.asList("BROWN_CLAY")),
    GREEN_STAINED_CLAY("GREEN_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 13,Arrays.asList("GREEN_CLAY")),
    RED_STAINED_CLAY("RED_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 14,Arrays.asList("RED_CLAY")),
    BLACK_STAINED_CLAY("BLACK_STAINED_CLAY", STAINED_HARDENED_CLAY, (short) 15,Arrays.asList("BLACK_CLAY")),
    STAINED_GLASS_PANE("STAINED_GLASS_PANE", 160),
    WHITE_STAINED_GLASS_PANE("WHITE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 0,Arrays.asList("WHITE_PANE")),
    ORANGE_STAINED_GLASS_PANE("ORANGE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 1,Arrays.asList("ORANGE_PANE")),
    MAGENTA_STAINED_GLASS_PANE("MAGENTA_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 2,Arrays.asList("MAGENTA_PANE")),
    LIGHT_BLUE_STAINED_GLASS_PANE("LIGHT_BLUE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 3,Arrays.asList("LIGHT_BLUE_PANE")),
    YELLOW_STAINED_GLASS_PANE("YELLOW_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 4,Arrays.asList("YELLOW_PAIN")),
    LIME_STAINED_GLASS_PANE("LIME_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 5,Arrays.asList("LIME_PANE")),
    PINK_STAINED_GLASS_PANE("PINK_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 6,Arrays.asList("PINK_PANE")),
    GRAY_STAINED_GLASS_PANE("GRAY_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 7,Arrays.asList("GRAY_PANE")),
    LIGHT_GRAY_STAINED_GLASS_PANE("LIGHT_GRAY_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 8,Arrays.asList("LIGHT_GREY_PANE")),
    CYAN_STAINED_GLASS_PANE("CYAN_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 9,Arrays.asList("CYAN_PANE")),
    PURPLE_STAINED_GLASS_PANE("PURPLE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 10,Arrays.asList("PURPLE_PANE")),
    BLUE_STAINED_GLASS_PANE("BLUE_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 11,Arrays.asList("BLUE_PANE")),
    BROWN_STAINED_GLASS_PANE("BROWN_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 12,Arrays.asList("BROWN_PANE")),
    GREEN_STAINED_GLASS_PANE("GREEN_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 13,Arrays.asList("GREEN_PANE")),
    RED_STAINED_GLASS_PANE("RED_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 14,Arrays.asList("RED_PANE")),
    BLACK_STAINED_GLASS_PANE("BLACK_STAINED_GLASS_PANE", STAINED_GLASS_PANE, (short) 15,Arrays.asList("BLACK_PANE")),
    LEAVES2("LEAVES2", 161),
    ACACIA_LEAVES("ACACIA_LEAVES", LEAVES2, (short) 0),
    DARK_OAK_LEAVES("DARK_OAK_LEAVES", LEAVES2, (short) 1),
    ACACIA_LEAVES_NO_DECAY("ACACIA_LEAVES_NO_DECAY", LEAVES2, (short) 4),
    DARK_OAK_LEAVES_NO_DECAY("DARK_OAK_LEAVES_NO_DECAY", LEAVES2, (short) 5),
    ACACIA_LEAVES_DECAY("ACACIA_LEAVES_DECAY", LEAVES2, (short) 8),
    DARK_OAK_LEAVES_DECAY("DARK_OAK_LEAVES_DECAY", LEAVES2, (short) 9),
    LOG2("LOG2", 162),
    ACACIA_LOG_UP("ACACIA_LOG_UP", LOG2, (short) 0),
    DARK_OAK_LOG_UP("DARK_OAK_LOG_UP", LOG2, (short) 1),
    ACACIA_LOG_EAST("ACACIA_LOG_EAST", LOG2, (short) 4),
    DARK_OAK_LOG_EAST("DARK_OAK_LOG_EAST", LOG2, (short) 5),
    ACACIA_LOG_NORTH("ACACIA_LOG_NORTH", LOG2, (short) 8),
    DARK_OAK_LOG_NORTH("DARK_OAK_LOG_NORTH", LOG2, (short) 9),
    ACACIA_LOG_BARK("ACACIA_LOG_BARK", LOG2, (short) 12),
    DARK_OAK_LOG_BARK("DARK_OAK_LOG_BARK", LOG2, (short) 13),
    ACACIA_STAIRS("ACACIA_STAIRS", 163),
    DARK_OAK_STAIRS("DARK_OAK_STAIRS", 164),
    SLIME("SLIME", 165, Arrays.asList("SLIME_BLOCK")),
    BARRIER("BARRIER", 165),
    IRON_TRAPDOOR("IRON_TRAPDOOR", 167),
    PRISMARINE("PRISMARINE", 168),
    PRISMARINE_BRICKS("PRISMARINE_BRICKS", PRISMARINE, (short) 1),
    DARK_PRISMARINE("DARK_PRISMARINE", PRISMARINE, (short) 2),
    SEA_LANTERN("SEA_LANTERN", 169),
    HAY_BLOCK("HAY_BLOCK", 170, Arrays.asList("HAY_BALE")),
    HAY_BLOCK_UP("HAY_BLOCK_UP", HAY_BLOCK, (short) 0),
    HAY_BLOCK_EAST("HAY_BLOCK_EAST", HAY_BLOCK, (short) 4),
    HAY_BLOCK_NORTH("HAY_BLOCK_NORTH", HAY_BLOCK, (short) 8),
    CARPET("CARPET", 171),
    WHITE_CARPET("WHITE_CARPET", CARPET, (short) 0),
    ORANGE_CARPET("ORANGE_CARPET", CARPET, (short) 1),
    MAGENTA_CARPET("MAGENTA_CARPET", CARPET, (short) 2),
    LIGHT_BLUE_CARPET("LIGHT_BLUE_CARPET", CARPET, (short) 3),
    YELLOW_CARPET("YELLOW_CARPET", CARPET, (short) 4),
    LIME_CARPET("LIME_CARPET", CARPET, (short) 5),
    PINK_CARPET("PINK_CARPET", CARPET, (short) 6),
    GRAY_CARPET("GRAY_CARPET", CARPET, (short) 7),
    LIGHT_GRAY_CARPET("LIGHT_GRAY_CARPET", CARPET, (short) 8),
    CYAN_CARPET("CYAN_CARPET", CARPET, (short) 9),
    PURPLE_CARPET("PURPLE_CARPET", CARPET, (short) 10),
    BLUE_CARPET("BLUE_CARPET", CARPET, (short) 11),
    BROWN_CARPET("BROWN_CARPET", CARPET, (short) 12),
    GREEN_CARPET("GREEN_CARPET", CARPET, (short) 13),
    RED_CARPET("RED_CARPET", CARPET, (short) 14),
    BLACK_CARPET("BLACK_CARPET", CARPET, (short) 15),
    HARDENED_CLAY("HARDENED_CLAY", 172),
    COAL_BLOCK("COAL_BLOCK", 173),
    PACKED_ICE("PACKED_ICE", 174),
    DOUBLE_PLANT("DOUBLE_PLANT", 175),
    SUNFLOWER("SUNFLOWER", DOUBLE_PLANT, (short) 0),
    LILAC("LILAC", DOUBLE_PLANT, (short) 1),
    DOUBLE_TALLGRASS("DOUBLE_TALLGRASS", DOUBLE_PLANT, (short) 2),
    LARGE_FERN("LARGE_FERN", DOUBLE_PLANT, (short) 3),
    ROSE_BUSH("ROSE_BUSH", DOUBLE_PLANT, (short) 4),
    PEONY("PEONY", DOUBLE_PLANT, (short) 5),
    STANDING_BANNER("STANDING_BANNER", 176),//Unobtainable
    BLACK_STANDING_BANNER("BLACK_STANDING_BANNER", STANDING_BANNER, (short) 0),
    RED_STANDING_BANNER("RED_STANDING_BANNER", STANDING_BANNER, (short) 1),
    GREEN_STANDING_BANNER("GREEN_STANDING_BANNER", STANDING_BANNER, (short) 2),
    BROWN_STANDING_BANNER("BROWN_STANDING_BANNER", STANDING_BANNER, (short) 3),
    BLUE_STANDING_BANNER("BLUE_STANDING_BANNER", STANDING_BANNER, (short) 4),
    PURPLE_STANDING_BANNER("PURPLE_STANDING_BANNER", STANDING_BANNER, (short) 5),
    CYAN_STANDING_BANNER("CYAN_STANDING_BANNER", STANDING_BANNER, (short) 6),
    LIGHT_GRAY_STANDING_BANNER("LIGHT_GRAY_STANDING_BANNER", STANDING_BANNER, (short) 7),
    GRAY_STANDING_BANNER("GRAY_STANDING_BANNER", STANDING_BANNER, (short) 8),
    PINK_STANDING_BANNER("PINK_STANDING_BANNER", STANDING_BANNER, (short) 9),
    LIME_STANDING_BANNER("LIME_STANDING_BANNER", STANDING_BANNER, (short) 10),
    YELLOW_STANDING_BANNER("YELLOW_STANDING_BANNER", STANDING_BANNER, (short) 11),
    LIGHT_BLUE_STANDING_BANNER("LIGHT_BLUE_STANDING_BANNER", STANDING_BANNER, (short) 12),
    MAGENTA_STANDING_BANNER("MAGENTA_STANDING_BANNER", STANDING_BANNER, (short) 13),
    ORANGE_STANDING_BANNER("ORANGE_STANDING_BANNER", STANDING_BANNER, (short) 14),
    WHITE_STANDING_BANNER("WHITE_STANDING_BANNER", STANDING_BANNER, (short) 15),
    WALL_BANNER("WALL_BANNER", 177),//Unobtainable
    BLACK_WALL_BANNER("BLACK_WALL_BANNER", WALL_BANNER, (short) 0),
    RED_WALL_BANNER("RED_WALL_BANNER", WALL_BANNER, (short) 1),
    GREEN_WALL_BANNER("GREEN_WALL_BANNER", WALL_BANNER, (short) 2),
    BROWN_WALL_BANNER("BROWN_WALL_BANNER", WALL_BANNER, (short) 3),
    BLUE_WALL_BANNER("BLUE_WALL_BANNER", WALL_BANNER, (short) 4),
    PURPLE_WALL_BANNER("PURPLE_WALL_BANNER", WALL_BANNER, (short) 5),
    CYAN_WALL_BANNER("CYAN_WALL_BANNER", WALL_BANNER, (short) 6),
    LIGHT_GRAY_WALL_BANNER("LIGHT_GRAY_WALL_BANNER", WALL_BANNER, (short) 7),
    GRAY_WALL_BANNER("GRAY_WALL_BANNER", WALL_BANNER, (short) 8),
    PINK_WALL_BANNER("PINK_WALL_BANNER", WALL_BANNER, (short) 9),
    LIME_WALL_BANNER("LIME_WALL_BANNER", WALL_BANNER, (short) 10),
    YELLOW_WALL_BANNER("YELLOW_WALL_BANNER", WALL_BANNER, (short) 11),
    LIGHT_BLUE_WALL_BANNER("LIGHT_BLUE_WALL_BANNER", WALL_BANNER, (short) 12),
    MAGENTA_WALL_BANNER("MAGENTA_WALL_BANNER", WALL_BANNER, (short) 13),
    ORANGE_WALL_BANNER("ORANGE_WALL_BANNER", WALL_BANNER, (short) 14),
    WHITE_WALL_BANNER("WHITE_WALL_BANNER", WALL_BANNER, (short) 15),
    DAYLIGHT_DETECTOR_INVERTED("DAYLIGHT_DETECTOR_INVERTED", 178),//Unobtainable
    RED_SANDSTONE("RED_SANDSTONE", 179),
    CHISELED_RED_SANDSTONE("CHISELED_RED_SANDSTONE", RED_SANDSTONE, (short) 1),
    SMOOTH_RED_SANDSTONE("SMOOTH_RED_SANDSTONE", RED_SANDSTONE, (short) 2),
    RED_SANDSTONE_STAIRS("RED_SANDSTONE_STAIRS", 180),
    DOUBLE_STONE_SLAB2("DOUBLE_STONE_SLAB2", 181),//Unobtainable
    DOUBLE_RED_SANDSTONE_SLAB("DOUBLE_RED_SANDSTONE_SLAB", DOUBLE_STONE_SLAB2, (short) 0),
    FULL_RED_SANDSTONE_SLAB("FULL_RED_SANDSTONE_SLAB", DOUBLE_STONE_SLAB2, (short) 8),
    STONE_SLAB2("STONE_SLAB2", 182),
    RED_SANDSTONE_SLAB("RED_SANDSTONE_SLAB", STONE_SLAB2, (short) 0),
    UPPER_RED_SANDSTONE_SLAB("UPPER_RED_SANDSTONE_SLAB", STONE_SLAB2, (short) 8),
    SPRUCE_FENCE_GATE("SPRUCE_FENCE_GATE", 183),
    BIRCH_FENCE_GATE("BIRCH_FENCE_GATE", 184),
    JUNGLE_FENCE_GATE("JUNGLE_FENCE_GATE", 185),
    DARK_OAK_FENCE_GATE("DARK_OAK_FENCE_GATE", 186),
    ACACIA_FENCE_GATE("ACACIA_FENCE_GATE", 187),
    SPRUCE_FENCE("SPRUCE_FENCE", 188),
    BIRCH_FENCE("BIRCH_FENCE", 189),
    JUNGE_FENCE("JUNGE_FENCE", 190),
    DARK_OAK_FENCE("DARK_OAK_FENCE", 191),
    ACACIA_FENCE("ACACIA_FENCE", 192),
    SPRUCE_DOOR_BLOCK("SPRUCE_DOOR_BLOCK", 193),//Unobtainable
    BIRCH_DOOR_BLOCK("BIRCH_DOOR_BLOCK", 194),//Unobtainable
    JUGNLE_DOOR_BLOCK("JUGNLE_DOOR_BLOCK", 195),//Unobtainable
    ACACIA_DOOR_BLOCK("ACACIA_DOOR_BLOCK", 196),//Unobtainable
    DARK_OAK_DOOR_BLOCK("DARK_OAK_DOOR_BLOCK", 197),//Unobtainable
    //ITEM IDS
    IRON_SHOVEL("IRON_SHOVEL", 256),
    IRON_PICKAXE("IRON_PICKAXE", 257),
    IRON_AXE("IRON_AXE", 258),
    FLINT_AND_STEEL("FLINT_AND_STEEL", 259),
    APPLE("APPLE", 260),
    BOW("BOW", 261),
    ARROW("ARROW", 262),
    COAL("COAL", 263),
    DIAMOND("DIAMOND", 264),
    IRON_INGOT("IRON_INGOT", 265 ,Arrays.asList("IRON")),
    GOLD_INGOT("GOLD_INGOT", 266,Arrays.asList("GOLD","BUTTER")),
    IRON_SWORD("IRON_SWORD", 267),
    WOODEN_SWORD("WOODEN_SWORD", 268,Arrays.asList("WOOD_SWORD")),
    WOODEN_SHOVEL("WOODEN_SHOVEL", 269,Arrays.asList("WOOD_SHOVEL")),
    WOODEN_PICKAXE("WOODEN_PICKAXE", 270,Arrays.asList("WOOD_PICKAXE","WOOD_PICK")),
    WOODEN_AXE("WOODEN_AXE", 271,Arrays.asList("WOOD_AXE")),
    STONE_SWORD("STONE_SWORD", 272),
    STONE_SHOVEL("STONE_SHOVEL", 273),
    STONE_PICKAXE("STONE_PICKAXE", 274,Arrays.asList("STONE_PICK")),
    STONE_AXE("STONE_AXE", 275),
    DIAMOND_SWORD("DIAMOND_SWORD", 276),
    DIAMOND_SHOVEL("DIAMOND_SHOVEL", 277),
    DIAMOND_PICKAXE("DIAMOND_PICKAXE", 278,Arrays.asList("DIAMOND_PICK")),
    DIAMOND_AXE("DIAMOND_AXE", 279),
    STICK("STICK", 280),
    BOWL("BOWL", 281),
    MUSHROOM_STEW("MUSHROOM_STEW", 282,Arrays.asList("STEW")),
    GOLDEN_SWORD("GOLDEN_SWORD", 283,Arrays.asList("GOLD_SWORD","BUTTER_SWORD")),
    GOLDEN_SHOVEL("GOLDEN_SHOVEL", 284,Arrays.asList("GOLD_SHOVEL","BUTTER_SHOVEL")),
    GOLDEN_PICKAXE("GOLDEN_PICKAXE", 285,Arrays.asList("GOLD_PICK","BUTTER_PICK")),
    GOLDEN_AXE("GOLDEN_AXE", 286,Arrays.asList("GOLD_AXE", "BUTTER_AXE")),
    STRING("STRING", 287),
    FEATHER("FEATHER", 288),
    GUNPOWDER("GUNPOWDER", 289,Arrays.asList("SULPHUR","SULFER")),
    WOODEN_HOE("WOODEN_HOE", 290),
    STONE_HOE("STONE_HOE", 291),
    IRON_HOE("IRON_HOE", 292),
    DIAMOND_HOE("DIAMOND_HOE", 293),
    GOLDEN_HOE("GOLDEN_HOE", 294,Arrays.asList("GOLD_HOE", "BUTTER_HOE")),
    WHEAT_SEEDS("WHEAT_SEEDS", 295),
    WHEAT("WHEAT", 296),
    BREAD("BREAD", 297),
    LEATHER_HELMET("LEATHER_HELMET", 298 ,Arrays.asList("LEATHER_HAT")),
    LEATHER_CHESTPLATE("LEATHER_CHESTPLATE", 299,Arrays.asList("LEATHER_CHEST")),
    LEATHER_LEGGINGS("LEATHER_LEGGINGS", 300,Arrays.asList("LEATHER_PANTS")),
    LEATHER_BOOTS("LEATHER_BOOTS", 301),
    CHAINMAIL_HELMET("CHAINMAIL_HELMET", 302,Arrays.asList("CHAINMAIL_HAT")),
    CHAINMAIL_CHESTPLATE("CHAINMAIL_CHESTPLATE", 303,Arrays.asList("CHAINMAIL_CHEST")),
    CHAINMAIL_LEGGINGS("CHAINMAIL_LEGGINGS", 304,Arrays.asList("CHAINMAIL_PANTS")),
    CHAINMAIL_BOOTS("CHAINMAIL_BOOTS", 305),
    IRON_HELMET("IRON_HELMET", 306,Arrays.asList("IRON_HAT")),
    IRON_CHESTPLATE("IRON_CHESTPLATE", 307,Arrays.asList("IRON_CHEST")),
    IRON_LEGGINGS("IRON_LEGGINGS", 308,Arrays.asList("IRON_PANTS")),
    IRON_BOOTS("IRON_BOOTS", 309),
    DIAMOND_HELMET("DIAMOND_HELMET", 310,Arrays.asList("DIAMOND_HAT")),
    DIAMOND_CHESTPLATE("DIAMOND_CHESTPLATE", 311,Arrays.asList("DIAMOND_CHEST")),
    DIAMOND_LEGGINGS("DIAMOND_LEGGINGS", 312,Arrays.asList("DIAMOND_PANTS")),
    DIAMOND_BOOTS("DIAMOND_BOOTS", 313),
    GOLDEN_HELMET("GOLDEN_HELMET", 314,Arrays.asList("GOLD_HAT","BUTTER_HELMET","BUTTER_HAT")),
    GOLDEN_CHESTPLATE("GOLDEN_CHESTPLATE", 315,Arrays.asList("GOLD_CHEST","BUTTER_CHESTPLATE","BUTTER_CHEST")),
    GOLDEN_LEGGINGS("GOLDEN_LEGGINGS", 316,Arrays.asList("GOLD_PANTS","BUTTER_LEGGINGS","BUTTER_PANTS")),
    GOLDEN_BOOTS("GOLDEN_BOOTS", 317,Arrays.asList("BUTTER_BOOTS")),
    FLINT("FLINT", 318),
    PORKCHOP("PORKCHOP", 319,Arrays.asList("RAW_PORK")),
    COOKED_PORKCHOP("COOKED_PORKCHOP", 320,Arrays.asList("PORK")),
    PAINTING("PAINTING", 321),
    GOLDEN_APPLE("GOLDEN_APPLE", 322,Arrays.asList("GOLD_APPLE")),
    ENCHANTED_GOLDEN_APPLE("ENCHANTED_GOLDEN_APPLE", GOLDEN_APPLE, (short) 1,Arrays.asList("GOD_APPLE")),
    SIGN("SIGN", 323),
    WOODEN_DOOR("WOODEN_DOOR", 324,Arrays.asList("WOOD_DOOR")),
    BUCKET("BUCKET", 325),
    WATER_BUCKET("WATER_BUCKET", 326),
    LAVA_BUCKET("LAVA_BUCKET", 327),
    MINECART("MINECART", 328),
    SADDLE("SADDLE", 329),
    IRON_DOOR("IRON_DOOR", 330),
    REDSTONE("REDSTONE", 331),
    SNOWBALL("SNOWBALL", 332),
    BOAT("BOAT", 333),
    LEATHER("LEATHER", 334),
    MILK_BUCKET("MILK_BUCKET", 335),
    BRICK("BRICK", 336),
    CLAY_BALL("CLAY_BALL", 337),
    REEDS("REEDS", 338),
    PAPER("PAPER", 339),
    BOOK("BOOK", 340),
    SLIME_BALL("SLIME_BALL", 341),
    CHEST_MINECART("CHEST_MINECART", 342),
    FURNACE_MINECART("FURNACE_MINECART", 343),
    EGG("EGG", 344),
    COMPASS("COMPASS", 345),
    FISHING_ROD("FISHING_ROD", 346),
    CLOCK("CLOCK", 347),
    GLOWSTONE_DUST("GLOWSTONE_DUST", 348),
    FISH("FISH", 349),
    COOKED_FISH("COOKED_FISH", 350),
    DYE("DYE", 351),
    INK_SACK("INK_SACK", DYE, (short) 0),
    ROSE_RED("ROSE_RED", DYE, (short) 1),
    CACTUS_GREEN("CACTUS_GREEN", DYE, (short) 2),
    COCOA_BEANS("COCOA_BEANS", DYE, (short) 3),
    LAPIS_LAZULI("LAPIS_LAZULI", DYE, (short) 4),
    PURPLE_DYE("PURPLE_DYE", DYE, (short) 5),
    CYAN_DYE("CYAN_DYE", DYE, (short) 6),
    LIGHT_GRAY_DYE("LIGHT_GRAY_DYE", DYE, (short) 7),
    GRAY_DYE("GRAY_DYE", DYE, (short) 8),
    PINK_DYE("PINK_DYE", DYE, (short) 9),
    LIME_DYE("LIME_DYE", DYE, (short) 10),
    DANDELION_YELLOW("DANDELION_YELLOW", DYE, (short) 11),
    LIGHT_BLUE_DYE("LIGHT_BLUE_DYE", DYE, (short) 12),
    MAGENTA_DYE("MAGENTA_DYE", DYE, (short) 13),
    ORANGE_DYE("ORANGE_DYE", DYE, (short) 14),
    BONE_MEAL("BONE_MEAL", DYE, (short) 15),
    BONE("BONE", 352,Arrays.asList("DOG_BISCUIT","PUPNEWFSTERS_FAVORITE")),
    SUGAR("SUGAR", 353),
    CAKE("CAKE", 354),
    BED("BED", 355),
    REPEATER("REPEATER", 356,Arrays.asList("DIODE")),
    COOKIE("COOKIE", 357),
    FILLED_MAP("FILLED_MAP", 358),
    SHEARS("SHEARS", 359),
    MELON("MELON", 360),
    PUMPKIN_SEEDS("PUMPKIN_SEEDS", 361),
    MELON_SEEDS("MELON_SEEDS", 362),
    BEEF("BEEF", 363,Arrays.asList("RAW_STEAK")),
    COOKED_BEEF("COOKED_BEEF", 364,Arrays.asList("STEAK")),
    CHICKEN("CHICKEN", 365),
    COOKED_CHICKEN("COOKED_CHICKEN", 366),
    ROTTEN_FLESH("ROTTEN_FLESH", 367),
    ENDER_PEARL("ENDER_PEARL", 368,Arrays.asList("TELEPORT_BALL")),
    BLAZE_ROD("BLAZE_ROD", 369),
    GHAST_TEAR("GHAST_TEAR", 370),
    GOLD_NUGGET("GOLD_NUGGET", 371,Arrays.asList("BUTTER_NUGGET")),
    NETHER_WART("NETHER_WART", 372,Arrays.asList("WART")),
    POTION("POTION", 373),
    WATER_BOTTLE("WATER_BOTTLE", POTION, (short) 0),
    AWKWARD_POTION("AWKWARD_POTION", POTION, (short) 16),
    THICK_POTION("THICK_POTION", POTION, (short) 32),
    MUNDANE_POTION_EXTENDED("MUNDANE_POTION_EXTENDED", POTION, (short) 64),
    MUNDANE_POTION("MUNDANE_POTION", POTION, (short) 8192),
    POTION_OF_REGENERATION("POTION_OF_REGENERATION", POTION, (short) 8193),
    POTION_OF_SWIFTNESS("POTION_OF_SWIFTNESS", POTION, (short) 8194),
    POTION_OF_FIRE_RESISTANCE("POTION_OF_FIRE_RESISTANCE", POTION, (short) 8195),
    POTION_OF_POISON("POTION_OF_POISON", POTION, (short) 8196),
    POTION_OF_HEALING("POTION_OF_HEALING", POTION, (short) 8197),
    POTION_OF_NIGHT_VISION("POTION_OF_NIGHT_VISION", POTION, (short) 8198),
    POTION_OF_WEAKNESS("POTION_OF_WEAKNESS", POTION, (short) 8200),
    POTION_OF_STRENGTH("POTION_OF_STRENGTH", POTION, (short) 8201),
    POTION_OF_SLOWNESS("POTION_OF_SLOWNESS", POTION, (short) 8202),
    POTION_OF_LEAPING("POTION_OF_LEAPING", POTION, (short) 8203),
    POTION_OF_HARMING("POTION_OF_HARMING", POTION, (short) 8204),
    POTION_OF_WATER_BREATHING("POTION_OF_WATER_BREATHING", POTION, (short) 8205),
    POTION_OF_INVISIBILITY("POTION_OF_INVISIBILITY", POTION, (short) 8206),
    POTION_OF_REGENERATION_2("POTION_OF_REGENERATION_2", POTION, (short) 8225),
    POTION_OF_SWIFTNESS_2("POTION_OF_SWIFTNESS_2", POTION, (short) 8226),
    POTION_OF_FIRE_RESISTANCE_2("POTION_OF_FIRE_RESISTANCE_2", POTION, (short) 8227),
    POTION_OF_POISON_2("POTION_OF_POISON_2", POTION, (short) 8228),
    POTION_OF_HEALING_2("POTION_OF_HEALING_2", POTION, (short) 8229),
    POTION_OF_STRENGTH_2("POTION_OF_STRENGTH_2", POTION, (short) 8233),
    POTION_OF_LEAPING_2("POTION_OF_LEAPING_2", POTION, (short) 8235),
    POTION_OF_HARMING_2("POTION_OF_HARMING_2", POTION, (short) 8236),
    POTION_OF_REGENERATION_EXTENDED("POTION_OF_REGENERATION_EXTENDED", POTION, (short) 8257),
    POTION_OF_SWIFTNESS_EXTENDED("POTION_OF_SWIFTNESS_EXTENDED", POTION, (short) 8258),
    POTION_OF_FIRE_RESISTANCE_EXTENDED("POTION_OF_FIRE_RESISTANCE_EXTENDED", POTION, (short) 8259),
    POTION_OF_POISON_EXTENDED("POTION_OF_POISON_EXTENDED", POTION, (short) 8260),
    POTION_OF_NIGHT_VISION_EXTENDED("POTION_OF_NIGHT_VISION_EXTENDED", POTION, (short) 8262),
    POTION_OF_WEAKNESS_EXTENDED("POTION_OF_WEAKNESS_EXTENDED", POTION, (short) 8264),
    POTION_OF_STRENGTH_EXTENDED("POTION_OF_STRENGTH_EXTENDED", POTION, (short) 8265),
    POTION_OF_SLOWNESS_EXTENDED("POTION_OF_SLOWNESS_EXTENDED", POTION, (short) 8266),
    POTION_OF_LEAPING_EXTENDED("POTION_OF_LEAPING_EXTENDED", POTION, (short) 8267),
    POTION_OF_WATER_BREATHING_EXTENDED("POTION_OF_WATER_BREATHING_EXTENDED", POTION, (short) 8269),
    POTION_OF_INVISIBILITY_EXTENDED("POTION_OF_INVISIBILITY_EXTENDED", POTION, (short) 8270),
    POTION_OF_REGENERATION_2_EXTENDED("POTION_OF_REGENERATION_2_EXTENDED", POTION, (short) 8289),
    POTION_OF_SWIFTNESS_2_EXTENDED("POTION_OF_SWIFTNESS_2_EXTENDED", POTION, (short) 8290),
    POTION_OF_POISON_2_EXTENDED("POTION_OF_POISON_2_EXTENDED", POTION, (short) 8292),
    POTION_OF_STRENGTH_2_EXTENDED("POTION_OF_STRENGTH_2_EXTENDED", POTION, (short) 8297),
    SPLASH_MUNDANE_POTION("SPLASH_MUNDANE_POTION", POTION, (short) 16384),
    SPLASH_POTION_OF_REGENERATION("SPLASH_POTION_OF_REGENERATION", POTION, (short) 16385),
    SPLASH_POTION_OF_SWIFTNESS("SPLASH_POTION_OF_SWIFTNESS", POTION, (short) 16386),
    SPLASH_POTION_OF_FIRE_RESISTANCE("SPLASH_POTION_OF_FIRE_RESISTANCE", POTION, (short) 16387),
    SPLASH_POTION_OF_POISON("SPLASH_POTION_OF_POISON", POTION, (short) 16388),
    SPLASH_POTION_OF_HEALING("SPLASH_POTION_OF_HEALING", POTION, (short) 16389),
    SPLASH_POTION_OF_NIGHT_VISION("SPLASH_POTION_OF_NIGHT_VISION", POTION, (short) 16390),
    SPLASH_POTION_OF_WEAKNESS("SPLASH_POTION_OF_WEAKNESS", POTION, (short) 16391),
    SPLASH_POTION_OF_STRENGTH("SPLASH_POTION_OF_STRENGTH", POTION, (short) 16392),
    SPLASH_POTION_OF_SLOWNESS("SPLASH_POTION_OF_SLOWNESS", POTION, (short) 16393),
    SPLASH_POTION_OF_LEAPING("SPLASH_POTION_OF_LEAPING", POTION, (short) 16394),
    SPLASH_POTION_OF_HARMING("SPLASH_POTION_OF_HARMING", POTION, (short) 16395),
    SPLASH_POTION_OF_WATER_BREATHING("SPLASH_POTION_OF_WATER_BREATHING", POTION, (short) 16397),
    SPLASH_POTION_OF_INVISIBILITY("SPLASH_POTION_OF_INVISIBILITY", POTION, (short) 16398),
    SPLASH_POTION_OF_REGENERATION_2("SPLASH_POTION_OF_REGENERATION_2", POTION, (short) 16417),
    SPLASH_POTION_OF_SWIFTNESS_2("SPLASH_POTION_OF_SWIFTNESS_2", POTION, (short) 16418),
    SPLASH_POTION_OF_FIRE_RESISTANCE_2("SPLASH_POTION_OF_FIRE_RESISTANCE_2", POTION, (short) 16419),
    SPLASH_POTION_OF_POISON_2("SPLASH_POTION_OF_POISON_2", POTION, (short) 16420),
    SPLASH_POTION_OF_HEALING_2("SPLASH_POTION_OF_HEALING_2", POTION, (short) 16421),
    SPLASH_POTION_OF_STRENGTH_2("SPLASH_POTION_OF_STRENGTH_2", POTION, (short) 16425),
    SPLASH_POTION_OF_LEAPING_2("SPLASH_POTION_OF_LEAPING_2", POTION, (short) 16427),
    SPLASH_POTION_OF_HARMING_2("SPLASH_POTION_OF_HARMING_2", POTION, (short) 16428),
    SPLASH_POTION_OF_REGENERATION_EXTENDED("SPLASH_POTION_OF_REGENERATION_EXTENDED", POTION, (short) 16449),
    SPLASH_POTION_OF_SWIFTNESS_EXTENDED("SPLASH_POTION_OF_SWIFTNESS_EXTENDED", POTION, (short) 16450),
    SPLASH_POTION_OF_FIRE_RESISTANCE_EXTENDED("SPLASH_POTION_OF_FIRE_RESISTANCE_EXTENDED", POTION, (short) 16451),
    SPLASH_POTION_OF_POISON_EXTENDED("SPLASH_POTION_OF_POISON_EXTENDED", POTION, (short) 16452),
    SPLASH_POTION_OF_NIGHT_VISION_EXTENDED("SPLASH_POTION_OF_NIGHT_VISION_EXTENDED", POTION, (short) 16453),
    SPLASH_POTION_OF_WEAKNESS_EXTENDED("SPLASH_POTION_OF_WEAKNESS_EXTENDED", POTION, (short) 16454),
    SPLASH_POTION_OF_STRENGTH_EXTENDED("SPLASH_POTION_OF_STRENGTH_EXTENDED", POTION, (short) 16455),
    SPLASH_POTION_OF_SLOWNESS_EXTENDED("SPLASH_POTION_OF_SLOWNESS_EXTENDED", POTION, (short) 16456),
    SPLASH_POTION_OF_LEAPING_EXTENDED("SPLASH_POTION_OF_LEAPING_EXTENDED", POTION, (short) 16457),
    SPLASH_POTION_OF_WATER_BREATHING_EXTENDED("SPLASH_POTION_OF_WATER_BREATHING_EXTENDED", POTION, (short) 16458),
    SPLASH_POTION_OF_INVISIBILITY_EXTENDED("SPLASH_POTION_OF_INVISIBILITY_EXTENDED", POTION, (short) 16459),
    SPLASH_POTION_OF_REGENERATION_2_EXTENDED("SPLASH_POTION_OF_REGENERATION_2_EXTENDED", POTION, (short) 16481),
    SPLASH_POTION_OF_SWIFTNESS_2_EXTENDED("SPLASH_POTION_OF_SWIFTNESS_2_EXTENDED", POTION, (short) 16482),
    SPLASH_POTION_OF_POISON_2_EXTENDED("SPLASH_POTION_OF_POISON_2_EXTENDED", POTION, (short) 16484),
    SPLASH_POTION_OF_STRENGTH_2_EXTENDED("SPLASH_POTION_OF_STRENGTH_2_EXTENDED", POTION, (short) 16489),
    GLASS_BOTTLE("GLASS_BOTTLE", 374),
    SPIDER_EYE("SPIDER_EYE", 375),
    FERMENTED_SPIDER_EYE("FERMENTED_SPIDER_EYE", 376),
    BLAZE_POWDER("BLAZE_POWDER", 377),
    MAGMA_CREAM("MAGMA_CREAM", 378),
    BREWING_STAND("BREWING_STAND", 379),
    CAULDRON("CAULDRON", 380),
    ENDER_EYE("ENDER_EYE", 381),
    SPECKLED_MELON("SPECKLED_MELON", 382),
    SPAWN_EGG("SPAWN_EGG", 383),
    SPAWN_CREEPER("SPAWN_CREEPER", SPAWN_EGG, (short) 50),
    SPAWN_SKELETON("SPAWN_SKELETON", SPAWN_EGG, (short) 51),
    SPAWN_SPIDER("SPAWN_SPIDER", SPAWN_EGG, (short) 52),
    SPAWN_ZOMBIE("SPAWN_ZOMBIE", SPAWN_EGG, (short) 54),
    SPAWN_SLIME("SPAWN_SLIME", SPAWN_EGG, (short) 55),
    SPAWN_GHAST("SPAWN_GHAST", SPAWN_EGG, (short) 56),
    SPAWN_ZOMBIE_PIGMAN("SPAWN_ZOMBIE_PIGMAN", SPAWN_EGG, (short) 57),
    SPAWN_ENDERMAN("SPAWN_ENDERMAN", SPAWN_EGG, (short) 58),
    SPAWN_CAVE_SPIDER("SPAWN_CAVE_SPIDER", SPAWN_EGG, (short) 59),
    SPAWN_SILVERFISH("SPAWN_SILVERFISH", SPAWN_EGG, (short) 60),
    SPAWN_BLAZE("SPAWN_BLAZE", SPAWN_EGG, (short) 61),
    SPAWN_MAGMA_CUBE("SPAWN_MAGMA_CUBE", SPAWN_EGG, (short) 62),
    SPAWN_BAT("SPAWN_BAT", SPAWN_EGG, (short) 65),
    SPAWN_WITCH("SPAWN_WITCH", SPAWN_EGG, (short) 66),
    SPAWN_ENDERMITE("SPAWN_ENDERMITE", SPAWN_EGG, (short) 67),
    SPAWN_GUARDIAN("SPAWN_GUARDIAN", SPAWN_EGG, (short) 68),
    SPAWN_PIG("SPAWN_PIG", SPAWN_EGG, (short) 90),
    SPAWN_SHEEP("SPAWN_SHEEP", SPAWN_EGG, (short) 91),
    SPAWN_COW("SPAWN_COW", SPAWN_EGG, (short) 92),
    SPAWN_CHICKEN("SPAWN_CHICKEN", SPAWN_EGG, (short) 93),
    SPAWN_SQUID("SPAWN_SQUID", SPAWN_EGG, (short) 94),
    SPAWN_WOLF("SPAWN_WOLF", SPAWN_EGG, (short) 95),
    SPAWN_MOOSHROOM("SPAWN_MOOSHROOM", SPAWN_EGG, (short) 96),
    SPAWN_OCELOT("SPAWN_OCELOT", SPAWN_EGG, (short) 98),
    SPAWN_HORSE("SPAWN_HORSE", SPAWN_EGG, (short) 100),
    SPAWN_RABBIT("SPAWN_RABBIT", SPAWN_EGG, (short) 101),
    SPAWN_VILLAGER("SPAWN_VILLAGER", SPAWN_EGG, (short) 120),
    EXPERIENCE_BOTTLE("EXPERIENCE_BOTTLE", 384),
    FIRE_CHARGE("FIRE_CHARGE", 385),
    WRITABLE_BOOK("WRITABLE_BOOK", 386),
    WRITTEN_BOOK("WRITTEN_BOOK", 387),
    EMERALD("EMERALD", 388),
    ITEM_FRAME("ITEM_FRAME", 389),
    FLOWER_POT("FLOWER_POT", 390),
    CARROT("CARROT", 391),
    POTATO("POTATO", 392),
    BAKED_POTATO("BAKED_POTATO", 393),
    POISONOUS_POTATO("POISONOUS_POTATO", 394),
    MAP("MAP", 395),
    GOLDEN_CARROT("GOLDEN_CARROT", 396),
    SKULL("SKULL", 397),
    SKELETON_SKULL("SKELETON_SKULL", SKULL, (short) 0),
    WITHER_SKELETON_SKULL("WITHER_SKELETON_SKULL", SKULL, (short) 1),
    ZOMBIE_HEAD("ZOMBIE_HEAD", SKULL, (short) 2),
    HEAD("HEAD", SKULL, (short) 3),
    CREEPER_HEAD("CREEPER_HEAD", SKULL, (short) 4),
    CARROT_ON_A_STICK("CARROT_ON_A_STICK", 398),
    NETHER_STAR("NETHER_STAR", 399),
    PUMPKIN_PIE("PUMPKIN_PIE", 400),
    FIREWORKS("FIREWORKS", 401),
    FIREWORK_CHARGE("FIREWORK_CHARGE", 402),
    ENCHANTED_BOOK("ENCHANTED_BOOK", 403),
    COMPARATOR("COMPARATOR", 404),
    NETHERBRICK("NETHERBRICK", 405),
    QUARTZ("QUARTZ", 406),
    TNT_MINECART("TNT_MINECART", 407),
    HOPPER_MINECART("HOPPER_MINECART", 408),
    PRISMARINE_SHARD("PRISMARINE_SHARD", 409),
    PRISMARINE_CRYSTALS("PRISMARINE_CRYSTALS", 410),
    RABBIT("RABBIT", 411),
    COOKED_RABBIT("COOKED_RABBIT", 412),
    RABBIT_STEW("RABBIT_STEW", 413),
    RABBIT_FOOT("RABBIT_FOOT", 414),
    RABBIT_HIDE("RABBIT_HIDE", 415),
    ARMOR_STAND("ARMOR_STAND", 416),
    IRON_HORSE_ARMOR("IRON_HORSE_ARMOR", 417),
    GOLDEN_HORSE_ARMOR("GOLDEN_HORSE_ARMOR", 418,Arrays.asList("GOLD_HORSE_ARMOR","BUTTER_HORSE_ARMOR")),
    DIAMOND_HORSE_ARMOR("DIAMOND_HORSE_ARMOR", 419),
    LEAD("LEAD", 420,Arrays.asList("LEASH")),
    NAME_TAG("NAME_TAG", 421,Arrays.asList("HELLO_MY_NAME_IS")),
    COMMAND_BLOCK_MINECART("COMMAND_BLOCK_MINECART", 422, Arrays.asList("MINECART_WITH_COMMAND_BLOCK", "COMMAND_IN_MINECART", "MINECART_WITH_COMMAND")),
    MUTTON("MUTTON", 423,Arrays.asList("RAW_LAMB_CHOPS","RAW_LAMB")),
    COOKED_MUTTON("COOKED_MUTTON", 424,Arrays.asList("LAMB_CHOPS","LAMB")),
    BANNER("BANNER", 425),
    //426 unused
    SPRUCE_DOOR("SPRUCE_DOOR", 427),
    BIRCH_DOOR("BIRCH_DOOR", 428),
    JUNGLE_DOOR("JUNGLE_DOOR", 429),
    ACACIA_DOOR("ACACIA_DOOR", 430),
    DARK_OAK_DOOR("DARK_OAK_DOOR", 431),
    //Music Discs
    RECORD_13("RECORD_13", 2256, Arrays.asList("13", "MUSIC_DISC_13", "MUSIC_13", "C418_13")),
    RECORD_CAT("RECORD_CAT", 2257, Arrays.asList("CAT", "MUSIC_DISC_CAT", "MUSIC_CAT", "C418_CAT")),
    RECORD_BLOCKS("RECORD_BLOCKS", 2258, Arrays.asList("BLOCKS", "MUSIC_DISC_BLOCKS", "MUSIC_BLOCKS", "C418_BLOCKS")),
    RECORD_CHIRP("RECORD_CHIRP", 2259, Arrays.asList("CHIRP", "MUSIC_DISC_CHIRP", "MUSIC_CHIRP", "C418_CHIRP")),
    RECORD_FAR("RECORD_FAR", 2260, Arrays.asList("FAR", "MUSIC_DISC_FAR", "MUSIC_FAR", "C418_FAR")),
    RECORD_MALL("RECORD_MALL", 2261, Arrays.asList("MALL", "MUSIC_DISC_MALL", "MUSIC_MALL", "C418_MALL")),
    RECORD_MELLOHI("RECORD_MELLOHI", 2262, Arrays.asList("MELLOHI", "MUSIC_DISC_MELLOHI", "MUSIC_MELLOHI", "C418_MELLOHI")),
    RECORD_STAL("RECORD_STAL", 2263, Arrays.asList("STAL", "MUSIC_DISC_STAL", "MUSIC_STAL", "C418_STAL")),
    RECORD_STRAD("RECORD_STRAD", 2264, Arrays.asList("STRAD", "MUSIC_DISC_STRAD", "MUSIC_STRAD", "C418_STRAD")),
    RECORD_WARD("RECORD_WARD", 2265, Arrays.asList("WARD", "MUSIC_DISC_WARD", "MUSIC_WARD", "C418_WARD")),
    RECORD_11("RECORD_11", 2266, Arrays.asList("11", "MUSIC_DISC_11", "MUSIC_11", "C418_11")),
    RECORD_WAIT("RECORD_WAIT", 2267, Arrays.asList("WAIT", "MUSIC_DISC_WAIT", "MUSIC_WAIT", "C418_WAIT"));
    //TODO: Add in aliases for all as well as add things like max stack size and plurals

    private static HashMap<Integer,Material> idMap = new HashMap<>();
    private static HashMap<String,Material> nameMap = new HashMap<>();
    private static HashMap<String,String> aliasMap = new HashMap<>();
    private static List<Material> armorList;
    private static List<Material> bootsList;
    private static List<Material> helmetsList;
    private static List<Material> axesList;
    private static List<Material> pickaxeList;
    private static List<Material> shovelList;
    private static List<Material> swordsList;
    private static List<Material> hoeList;
    private HashMap<Short,Material> children;
    private final Material parent;
    private final String name;
    private final Integer id;
    private final short data;
    private List<String> aliases;

    private Material(String name, int id) {
        this(name, id, new ArrayList<String>());
    }

    private Material(String name, int id, List<String> aliases) {
        this.name = name;
        this.id = id;
        this.data = 0;
        this.aliases = aliases;
        this.parent = this;
        this.children = new HashMap<>();
    }

    private Material(String name, Material parent, short data) {
        this(name, parent, data, new ArrayList<String>());
    }

    private Material(String name, Material parent, short data, List<String> aliases) {
        this.name = name;
        this.data = data;
        this.id = null;
        this.aliases = aliases;
        this.parent = parent;
        this.children = new HashMap<>();
        this.parent.addChild(this.data, this);
    }

    protected void addChild(short data, Material child) {
        this.children.put(data, child);
    }

    public Material getParent() {
        return this.parent;
    }

    public String getName() {
        return this.name;
    }

    public int getID() {
        return this.parent.id;
    }

    private boolean mapID() {
        return this.id != null;
    }

    public short getData() {
        return this.data;
    }

    public List<String> getAliases() {
        return this.aliases;
    }

    public Material getChild(short data) {
        return this.children.get(data) == null ? this : this.children.get(data);
    }

    public boolean hasChildren() {
        return !this.children.isEmpty();
    }

    public boolean isBlock() {
        return getID() < 256;
    }

    public boolean isRecord() {
        return getID() > 2255;
    }

    public boolean isLiquid() {
        return this.getParent().equals(WATER) || this.getParent().equals(FLOWING_WATER) || this.getParent().equals(LAVA) || this.getParent().equals(FLOWING_LAVA);
    }

    public boolean isPotion() {
        return this.getParent().equals(POTION);
    }

    public boolean isLongGrass() {
        return this.getParent().equals(TALLGRASS) || this.getParent().equals(DOUBLE_PLANT);
    }

    public String plural(int amount) {
        //TODO: make return friendly then plural name this enum has to be finished first though
        return this.name;
    }

    public int getLightLevel() {
        switch(this) {
            case FIRE: case GLOWSTONE: case LIT_PUMPKIN: case LAVA: case FLOWING_LAVA: case BEACON: case END_PORTAL: case LIT_REDSTONE_LAMP: case SEA_LANTERN:
                return 15;
            case TORCH:
                return 14;
            case LIT_FURNACE:
                return 13;
            case PORTAL:
                return 11;
            case LIT_REDSTONE_ORE:
                return 9;
            case REDSTONE_TORCH: case ENDER_CHEST:
                return 7;
            case BROWN_MUSHROOM: case BREWING_STAND_BLOCK: case DRAGON_EGG: case END_PORTAL_FRAME:
                return 1;
            default:
                return 0;
        }
    }

    public static Material fromID(int id) {
        return idMap.get(id);
    }

    public static Material fromString(String name) {//Tries to get based on alias and then on exact name if no alias
        name = name.toUpperCase().replaceAll(" ", "").replaceAll("_", "");
        String n = aliasMap.get(name);
        return n == null ? nameMap.get(name) : nameMap.get(n);
    }

    public static Material fromData(Material m, short data) {
        if (m == null)
            return null;
        return m.getChild(data);
    }

    public static Material fromData(int id, short data) {
        return fromData(fromID(id), data);
    }

    public static Material fromData(String name, short data) {
        return fromData(fromString(name), data);
    }

    public static void mapMaterials() {
        for(Material m : values()) {
            if (m.mapID())
                idMap.put(m.getID(), m);
            nameMap.put(m.getName().replaceAll("_", ""), m);
            for(String alias : m.getAliases())
                aliasMap.put(alias.replaceAll("_", ""), m.getName().replace("_", ""));
        }
        armorList = Arrays.asList(LEATHER_BOOTS, LEATHER_CHESTPLATE, LEATHER_HELMET, LEATHER_LEGGINGS, IRON_BOOTS, IRON_CHESTPLATE, IRON_HELMET, IRON_LEGGINGS, GOLDEN_BOOTS, GOLDEN_CHESTPLATE, GOLDEN_HELMET,
                GOLDEN_LEGGINGS, DIAMOND_BOOTS, DIAMOND_CHESTPLATE, DIAMOND_HELMET, DIAMOND_LEGGINGS, CHAINMAIL_BOOTS, CHAINMAIL_CHESTPLATE, CHAINMAIL_HELMET, CHAINMAIL_LEGGINGS);
        bootsList = Arrays.asList(LEATHER_BOOTS, IRON_BOOTS, GOLDEN_BOOTS, DIAMOND_BOOTS, CHAINMAIL_BOOTS);
        helmetsList = Arrays.asList(LEATHER_HELMET, IRON_HELMET, GOLDEN_HELMET, DIAMOND_HELMET, CHAINMAIL_HELMET);
        axesList = Arrays.asList(WOODEN_AXE, STONE_AXE, IRON_AXE, GOLDEN_AXE, DIAMOND_AXE);
        swordsList = Arrays.asList(WOODEN_SWORD, STONE_SWORD, IRON_SWORD, GOLDEN_SWORD, DIAMOND_SWORD);
        pickaxeList = Arrays.asList(WOODEN_PICKAXE, STONE_PICKAXE, IRON_PICKAXE, GOLDEN_PICKAXE, DIAMOND_PICKAXE);
        shovelList = Arrays.asList(WOODEN_SHOVEL, STONE_SHOVEL, IRON_SHOVEL, GOLDEN_SHOVEL, DIAMOND_SHOVEL);
        hoeList = Arrays.asList(WOODEN_HOE, STONE_HOE, IRON_HOE, GOLDEN_HOE, DIAMOND_HOE);
    }

    public static List<Material> armorList() {
        return armorList;
    }

    public static List<Material> bootsList() {
        return bootsList;
    }

    public static List<Material> helmetsList() {
        return helmetsList;
    }

    public static List<Material> axesList() {
        return axesList;
    }

    public static List<Material> swordsList() {
        return swordsList;
    }

    public static List<Material> pickaxeList() {
        return pickaxeList;
    }

    public static List<Material> shovelList() {
        return shovelList;
    }

    public static List<Material> unbreakingList() {
        List<Material> r = new ArrayList<>();
        r.addAll(armorList);
        r.addAll(axesList);
        r.addAll(swordsList);
        r.addAll(pickaxeList);
        r.addAll(shovelList);
        r.addAll(hoeList);
        r.add(FISHING_ROD);
        r.add(FLINT_AND_STEEL);
        r.add(SHEARS);
        r.add(BOW);
        r.add(CARROT_ON_A_STICK);
        return r;
    }
}